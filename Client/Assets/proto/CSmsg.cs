// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class CSmsg {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_CSLoginReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSLoginReq, global::CSLoginReq.Builder> internal__static_CSLoginReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSLoginRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSLoginRsp, global::CSLoginRsp.Builder> internal__static_CSLoginRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSRegisterReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSRegisterReq, global::CSRegisterReq.Builder> internal__static_CSRegisterReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSRegisterRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSRegisterRsp, global::CSRegisterRsp.Builder> internal__static_CSRegisterRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSQuitReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSQuitReq, global::CSQuitReq.Builder> internal__static_CSQuitReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSRegisterLoginReqParam__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSRegisterLoginReqParam, global::CSRegisterLoginReqParam.Builder> internal__static_CSRegisterLoginReqParam__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSRegisterLoginRspParam__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSRegisterLoginRspParam, global::CSRegisterLoginRspParam.Builder> internal__static_CSRegisterLoginRspParam__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSRegisterLoginReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSRegisterLoginReq, global::CSRegisterLoginReq.Builder> internal__static_CSRegisterLoginReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSRegisterLoginRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSRegisterLoginRsp, global::CSRegisterLoginRsp.Builder> internal__static_CSRegisterLoginRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagFetchReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagFetchReq, global::CSBagFetchReq.Builder> internal__static_CSBagFetchReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagGridInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagGridInfo, global::CSBagGridInfo.Builder> internal__static_CSBagGridInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagBagInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagBagInfo, global::CSBagBagInfo.Builder> internal__static_CSBagBagInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagFetchRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagFetchRsp, global::CSBagFetchRsp.Builder> internal__static_CSBagFetchRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagUseReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagUseReq, global::CSBagUseReq.Builder> internal__static_CSBagUseReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSItemInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSItemInfo, global::CSItemInfo.Builder> internal__static_CSItemInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSItemInfoList__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSItemInfoList, global::CSItemInfoList.Builder> internal__static_CSItemInfoList__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagUseRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagUseRsp, global::CSBagUseRsp.Builder> internal__static_CSBagUseRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagReqParam__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagReqParam, global::CSBagReqParam.Builder> internal__static_CSBagReqParam__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagRspParam__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagRspParam, global::CSBagRspParam.Builder> internal__static_CSBagRspParam__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagReq, global::CSBagReq.Builder> internal__static_CSBagReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSBagRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSBagRsp, global::CSBagRsp.Builder> internal__static_CSBagRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagFetchReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagFetchReq, global::CSDecorateBagFetchReq.Builder> internal__static_CSDecorateBagFetchReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagGridInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagGridInfo, global::CSDecorateBagGridInfo.Builder> internal__static_CSDecorateBagGridInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagInfo, global::CSDecorateBagInfo.Builder> internal__static_CSDecorateBagInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagFetchRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagFetchRsp, global::CSDecorateBagFetchRsp.Builder> internal__static_CSDecorateBagFetchRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagShowSetReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagShowSetReq, global::CSDecorateBagShowSetReq.Builder> internal__static_CSDecorateBagShowSetReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagVIPFetchReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagVIPFetchReq, global::CSDecorateBagVIPFetchReq.Builder> internal__static_CSDecorateBagVIPFetchReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagVIPItem__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagVIPItem, global::CSDecorateBagVIPItem.Builder> internal__static_CSDecorateBagVIPItem__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagVIPList__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagVIPList, global::CSDecorateBagVIPList.Builder> internal__static_CSDecorateBagVIPList__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagVIPFetchRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagVIPFetchRsp, global::CSDecorateBagVIPFetchRsp.Builder> internal__static_CSDecorateBagVIPFetchRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagReqParam__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagReqParam, global::CSDecorateBagReqParam.Builder> internal__static_CSDecorateBagReqParam__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagRspParam__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagRspParam, global::CSDecorateBagRspParam.Builder> internal__static_CSDecorateBagRspParam__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagReq__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagReq, global::CSDecorateBagReq.Builder> internal__static_CSDecorateBagReq__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSDecorateBagRsp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagRsp, global::CSDecorateBagRsp.Builder> internal__static_CSDecorateBagRsp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSMsgBody__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSMsgBody, global::CSMsgBody.Builder> internal__static_CSMsgBody__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSMsgHead__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSMsgHead, global::CSMsgHead.Builder> internal__static_CSMsgHead__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSMsg__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSMsg, global::CSMsg.Builder> internal__static_CSMsg__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static CSmsg() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgtDU21zZy5wcm90bxoLREJtc2cucHJvdG8iLwoKQ1NMb2dpblJlcRIPCgdh", 
          "Y2NvdW50GAEgASgJEhAKCHBhc3N3b3JkGAIgASgJIjUKCkNTTG9naW5Sc3AS", 
          "DAoEdHlwZRgBIAEoDRIZCgRSb2xlGAIgASgLMgsuREJSb2xlSW5mbyJACg1D", 
          "U1JlZ2lzdGVyUmVxEg8KB2FjY291bnQYASABKAkSEAoIcGFzc3dvcmQYAiAB", 
          "KAkSDAoEbmFtZRgDIAEoCSIdCg1DU1JlZ2lzdGVyUnNwEgwKBHR5cGUYASAB", 
          "KA0iGAoJQ1NRdWl0UmVxEgsKA3BhZBgBIAEoDSJ6ChdDU1JlZ2lzdGVyTG9n", 
          "aW5SZXFQYXJhbRIdCghMb2dpblJlcRgBIAEoCzILLkNTTG9naW5SZXESIwoL", 
          "UmVnaXN0ZXJSZXEYAiABKAsyDi5DU1JlZ2lzdGVyUmVxEhsKB1F1aXRSZXEY", 
          "AyABKAsyCi5DU1F1aXRSZXEiXQoXQ1NSZWdpc3RlckxvZ2luUnNwUGFyYW0S", 
          "HQoITG9naW5Sc3AYASABKAsyCy5DU0xvZ2luUnNwEiMKC1JlZ2lzdGVyUnNw", 
          "GAIgASgLMg4uQ1NSZWdpc3RlclJzcCJiChJDU1JlZ2lzdGVyTG9naW5SZXES", 
          "IAoDY21kGAEgAigOMhMuQ1NSZWdpc3RlckxvZ2luQ21kEioKCHJlcVBhcmFt", 
          "GAIgASgLMhguQ1NSZWdpc3RlckxvZ2luUmVxUGFyYW0icgoSQ1NSZWdpc3Rl", 
          "ckxvZ2luUnNwEg4KBnJlc3VsdBgBIAEoBRIgCgNjbWQYAiACKA4yEy5DU1Jl", 
          "Z2lzdGVyTG9naW5DbWQSKgoIcnNwUGFyYW0YAyABKAsyGC5DU1JlZ2lzdGVy", 
          "TG9naW5Sc3BQYXJhbSIcCg1DU0JhZ0ZldGNoUmVxEgsKA3BhZBgBIAEoDSIs", 
          "Cg1DU0JhZ0dyaWRJbmZvEg4KBkl0ZW1JZBgBIAEoDRILCgNOdW0YAiABKA0i", 
          "MAoMQ1NCYWdCYWdJbmZvEiAKCEdyaWRJbmZvGAEgAygLMg4uQ1NCYWdHcmlk", 
          "SW5mbyIvCg1DU0JhZ0ZldGNoUnNwEh4KB0JhZ0luZm8YASABKAsyDS5DU0Jh", 
          "Z0JhZ0luZm8iQAoLQ1NCYWdVc2VSZXESDgoGSXRlbUlkGAEgASgNEg8KB0l0", 
          "ZW1OdW0YAiABKA0SEAoIUGlja2VkSWQYAyABKA0iJQoKQ1NJdGVtSW5mbxIK", 
          "CgJJRBgBIAEoBRILCgNudW0YAiABKAUiLwoOQ1NJdGVtSW5mb0xpc3QSHQoI", 
          "SXRlbUluZm8YASADKAsyCy5DU0l0ZW1JbmZvIjQKC0NTQmFnVXNlUnNwEiUK", 
          "DEl0ZW1JbmZvTGlzdBgBIAEoCzIPLkNTSXRlbUluZm9MaXN0Ik8KDUNTQmFn", 
          "UmVxUGFyYW0SIAoIRmV0Y2hSZXEYASABKAsyDi5DU0JhZ0ZldGNoUmVxEhwK", 
          "BlVzZVJlcRgCIAEoCzIMLkNTQmFnVXNlUmVxIk8KDUNTQmFnUnNwUGFyYW0S", 
          "IAoIRmV0Y2hSc3AYASABKAsyDi5DU0JhZ0ZldGNoUnNwEhwKBlVzZVJzcBgC", 
          "IAEoCzIMLkNTQmFnVXNlUnNwIkQKCENTQmFnUmVxEhYKA2NtZBgBIAIoDjIJ", 
          "LkNTQmFnQ21kEiAKCHJlcVBhcmFtGAIgASgLMg4uQ1NCYWdSZXFQYXJhbSJU", 
          "CghDU0JhZ1JzcBIOCgZyZXN1bHQYASABKAUSFgoDY21kGAIgAigOMgkuQ1NC", 
          "YWdDbWQSIAoIcnNwUGFyYW0YAyABKAsyDi5DU0JhZ1JzcFBhcmFtIiUKFUNT", 
          "RGVjb3JhdGVCYWdGZXRjaFJlcRIMCgR0eXBlGAEgASgNIkYKFUNTRGVjb3Jh", 
          "dGVCYWdHcmlkSW5mbxIOCgZJdGVtSWQYASABKA0SDAoEdHlwZRgCIAEoDRIP", 
          "CgdFbmRUaW1lGAMgASgEIkUKEUNTRGVjb3JhdGVCYWdJbmZvEjAKEERlY29y", 
          "YXRlR3JpZEluZm8YASADKAsyFi5DU0RlY29yYXRlQmFnR3JpZEluZm8iXgoV", 
          "Q1NEZWNvcmF0ZUJhZ0ZldGNoUnNwEgwKBHR5cGUYASABKA0SCgoCaWQYAiAB", 
          "KA0SKwoPRGVjb3JhdGVCYWdJbmZvGAMgASgLMhIuQ1NEZWNvcmF0ZUJhZ0lu", 
          "Zm8iMwoXQ1NEZWNvcmF0ZUJhZ1Nob3dTZXRSZXESDAoEVHlwZRgBIAEoDRIK", 
          "CgJpZBgCIAEoDSIoChhDU0RlY29yYXRlQmFnVklQRmV0Y2hSZXESDAoEdHlw", 
          "ZRgBIAEoDSI6ChRDU0RlY29yYXRlQmFnVklQSXRlbRIQCghWaXBHcmFkZRgB", 
          "IAEoDRIQCghWaXBFeHBlchgCIAEoDSJCChRDU0RlY29yYXRlQmFnVklQTGlz", 
          "dBIqCgtWSVBJdGVtTGlzdBgBIAMoCzIVLkNTRGVjb3JhdGVCYWdWSVBJdGVt", 
          "IokBChhDU0RlY29yYXRlQmFnVklQRmV0Y2hSc3ASDAoEdHlwZRgBIAEoDRIK", 
          "CgJpZBgCIAEoDRIrCg9EZWNvcmF0ZUJhZ0luZm8YAyABKAsyEi5DU0RlY29y", 
          "YXRlQmFnSW5mbxImCgdWaXBMaXN0GAQgASgLMhUuQ1NEZWNvcmF0ZUJhZ1ZJ", 
          "UExpc3QinwEKFUNTRGVjb3JhdGVCYWdSZXFQYXJhbRIoCghGZXRjaFJlcRgB", 
          "IAEoCzIWLkNTRGVjb3JhdGVCYWdGZXRjaFJlcRIsCgpTaG93U2V0UmVxGAIg", 
          "ASgLMhguQ1NEZWNvcmF0ZUJhZ1Nob3dTZXRSZXESLgoLVklQRmV0Y2hSZXEY", 
          "AyABKAsyGS5DU0RlY29yYXRlQmFnVklQRmV0Y2hSZXEicQoVQ1NEZWNvcmF0", 
          "ZUJhZ1JzcFBhcmFtEigKCEZldGNoUnNwGAEgASgLMhYuQ1NEZWNvcmF0ZUJh", 
          "Z0ZldGNoUnNwEi4KC1ZJUEZldGNoUnNwGAIgASgLMhkuQ1NEZWNvcmF0ZUJh", 
          "Z1ZJUEZldGNoUnNwIlwKEENTRGVjb3JhdGVCYWdSZXESHgoDY21kGAEgAigO", 
          "MhEuQ1NEZWNvcmF0ZUJhZ0NtZBIoCghyZXFQYXJhbRgCIAEoCzIWLkNTRGVj", 
          "b3JhdGVCYWdSZXFQYXJhbSJsChBDU0RlY29yYXRlQmFnUnNwEg4KBnJlc3Vs", 
          "dBgBIAEoBRIeCgNjbWQYAiACKA4yES5DU0RlY29yYXRlQmFnQ21kEigKCHJz", 
          "cFBhcmFtGAMgASgLMhYuQ1NEZWNvcmF0ZUJhZ1JzcFBhcmFtIvUBCglDU01z", 
          "Z0JvZHkSLQoQUmVnaXN0ZXJMb2dpblJlcRgBIAEoCzITLkNTUmVnaXN0ZXJM", 
          "b2dpblJlcRItChBSZWdpc3RlckxvZ2luUnNwGAIgASgLMhMuQ1NSZWdpc3Rl", 
          "ckxvZ2luUnNwEhkKBkJhZ1JlcRgDIAEoCzIJLkNTQmFnUmVxEhkKBkJhZ1Jz", 
          "cBgEIAEoCzIJLkNTQmFnUnNwEikKDkRlY29yYXRlQmFnUmVxGAUgASgLMhEu", 
          "Q1NEZWNvcmF0ZUJhZ1JlcRIpCg5EZWNvcmF0ZUJhZ1JzcBgGIAEoCzIRLkNT", 
          "RGVjb3JhdGVCYWdSc3AiMQoJQ1NNc2dIZWFkEgsKA3VpZBgBIAIoBBIXCgVt", 
          "c2dJRBgCIAIoDjIILkNTTXNnSUQiOwoFQ1NNc2cSGAoEaGVhZBgBIAIoCzIK", 
          "LkNTTXNnSGVhZBIYCgRib2R5GAIgAigLMgouQ1NNc2dCb2R5KnAKEkNTUmVn", 
          "aXN0ZXJMb2dpbkNtZBIfChtDU1JlZ2lzdGVyTG9naW5DbWRfUmVnaXN0ZXIQ", 
          "ARIcChhDU1JlZ2lzdGVyTG9naW5DbWRfTG9naW4QAhIbChdDU1JlZ2lzdGVy", 
          "TG9naW5DbWRfUXVpdBADKjAKCENTQmFnQ21kEhIKDkNTQmFnQ21kX0ZldGNo", 
          "EAESEAoMQ1NCYWdDbWRfVXNlEAIqawoQQ1NEZWNvcmF0ZUJhZ0NtZBIaChZD", 
          "U0RlY29yYXRlQmFnQ21kX0ZldGNoEAESHAoYQ1NEZWNvcmF0ZUJhZ0NtZF9T", 
          "aG93U2V0EAISHQoZQ1NEZWNvcmF0ZUJhZ0NtZF9WaXBGZXRjaBADKnUKB0NT", 
          "TXNnSUQSEAoMQ1NfTVNHSURfTUlOEAASGgoWQ1NfTVNHSURfUmVnaXN0ZXJM", 
          "b2dpbhABEhAKDENTX01TR0lEX0JBRxACEhgKFENTX01TR0lEX0RlY29yYXRl", 
        "QkFHEAMSEAoMQ1NfTVNHSURfTUFYEAQ="));
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_CSLoginReq__Descriptor = Descriptor.MessageTypes[0];
      internal__static_CSLoginReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSLoginReq, global::CSLoginReq.Builder>(internal__static_CSLoginReq__Descriptor,
              new string[] { "Account", "Password", });
      internal__static_CSLoginRsp__Descriptor = Descriptor.MessageTypes[1];
      internal__static_CSLoginRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSLoginRsp, global::CSLoginRsp.Builder>(internal__static_CSLoginRsp__Descriptor,
              new string[] { "Type", "Role", });
      internal__static_CSRegisterReq__Descriptor = Descriptor.MessageTypes[2];
      internal__static_CSRegisterReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSRegisterReq, global::CSRegisterReq.Builder>(internal__static_CSRegisterReq__Descriptor,
              new string[] { "Account", "Password", "Name", });
      internal__static_CSRegisterRsp__Descriptor = Descriptor.MessageTypes[3];
      internal__static_CSRegisterRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSRegisterRsp, global::CSRegisterRsp.Builder>(internal__static_CSRegisterRsp__Descriptor,
              new string[] { "Type", });
      internal__static_CSQuitReq__Descriptor = Descriptor.MessageTypes[4];
      internal__static_CSQuitReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSQuitReq, global::CSQuitReq.Builder>(internal__static_CSQuitReq__Descriptor,
              new string[] { "Pad", });
      internal__static_CSRegisterLoginReqParam__Descriptor = Descriptor.MessageTypes[5];
      internal__static_CSRegisterLoginReqParam__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSRegisterLoginReqParam, global::CSRegisterLoginReqParam.Builder>(internal__static_CSRegisterLoginReqParam__Descriptor,
              new string[] { "LoginReq", "RegisterReq", "QuitReq", });
      internal__static_CSRegisterLoginRspParam__Descriptor = Descriptor.MessageTypes[6];
      internal__static_CSRegisterLoginRspParam__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSRegisterLoginRspParam, global::CSRegisterLoginRspParam.Builder>(internal__static_CSRegisterLoginRspParam__Descriptor,
              new string[] { "LoginRsp", "RegisterRsp", });
      internal__static_CSRegisterLoginReq__Descriptor = Descriptor.MessageTypes[7];
      internal__static_CSRegisterLoginReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSRegisterLoginReq, global::CSRegisterLoginReq.Builder>(internal__static_CSRegisterLoginReq__Descriptor,
              new string[] { "Cmd", "ReqParam", });
      internal__static_CSRegisterLoginRsp__Descriptor = Descriptor.MessageTypes[8];
      internal__static_CSRegisterLoginRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSRegisterLoginRsp, global::CSRegisterLoginRsp.Builder>(internal__static_CSRegisterLoginRsp__Descriptor,
              new string[] { "Result", "Cmd", "RspParam", });
      internal__static_CSBagFetchReq__Descriptor = Descriptor.MessageTypes[9];
      internal__static_CSBagFetchReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagFetchReq, global::CSBagFetchReq.Builder>(internal__static_CSBagFetchReq__Descriptor,
              new string[] { "Pad", });
      internal__static_CSBagGridInfo__Descriptor = Descriptor.MessageTypes[10];
      internal__static_CSBagGridInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagGridInfo, global::CSBagGridInfo.Builder>(internal__static_CSBagGridInfo__Descriptor,
              new string[] { "ItemId", "Num", });
      internal__static_CSBagBagInfo__Descriptor = Descriptor.MessageTypes[11];
      internal__static_CSBagBagInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagBagInfo, global::CSBagBagInfo.Builder>(internal__static_CSBagBagInfo__Descriptor,
              new string[] { "GridInfo", });
      internal__static_CSBagFetchRsp__Descriptor = Descriptor.MessageTypes[12];
      internal__static_CSBagFetchRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagFetchRsp, global::CSBagFetchRsp.Builder>(internal__static_CSBagFetchRsp__Descriptor,
              new string[] { "BagInfo", });
      internal__static_CSBagUseReq__Descriptor = Descriptor.MessageTypes[13];
      internal__static_CSBagUseReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagUseReq, global::CSBagUseReq.Builder>(internal__static_CSBagUseReq__Descriptor,
              new string[] { "ItemId", "ItemNum", "PickedId", });
      internal__static_CSItemInfo__Descriptor = Descriptor.MessageTypes[14];
      internal__static_CSItemInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSItemInfo, global::CSItemInfo.Builder>(internal__static_CSItemInfo__Descriptor,
              new string[] { "ID", "Num", });
      internal__static_CSItemInfoList__Descriptor = Descriptor.MessageTypes[15];
      internal__static_CSItemInfoList__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSItemInfoList, global::CSItemInfoList.Builder>(internal__static_CSItemInfoList__Descriptor,
              new string[] { "ItemInfo", });
      internal__static_CSBagUseRsp__Descriptor = Descriptor.MessageTypes[16];
      internal__static_CSBagUseRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagUseRsp, global::CSBagUseRsp.Builder>(internal__static_CSBagUseRsp__Descriptor,
              new string[] { "ItemInfoList", });
      internal__static_CSBagReqParam__Descriptor = Descriptor.MessageTypes[17];
      internal__static_CSBagReqParam__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagReqParam, global::CSBagReqParam.Builder>(internal__static_CSBagReqParam__Descriptor,
              new string[] { "FetchReq", "UseReq", });
      internal__static_CSBagRspParam__Descriptor = Descriptor.MessageTypes[18];
      internal__static_CSBagRspParam__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagRspParam, global::CSBagRspParam.Builder>(internal__static_CSBagRspParam__Descriptor,
              new string[] { "FetchRsp", "UseRsp", });
      internal__static_CSBagReq__Descriptor = Descriptor.MessageTypes[19];
      internal__static_CSBagReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagReq, global::CSBagReq.Builder>(internal__static_CSBagReq__Descriptor,
              new string[] { "Cmd", "ReqParam", });
      internal__static_CSBagRsp__Descriptor = Descriptor.MessageTypes[20];
      internal__static_CSBagRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSBagRsp, global::CSBagRsp.Builder>(internal__static_CSBagRsp__Descriptor,
              new string[] { "Result", "Cmd", "RspParam", });
      internal__static_CSDecorateBagFetchReq__Descriptor = Descriptor.MessageTypes[21];
      internal__static_CSDecorateBagFetchReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagFetchReq, global::CSDecorateBagFetchReq.Builder>(internal__static_CSDecorateBagFetchReq__Descriptor,
              new string[] { "Type", });
      internal__static_CSDecorateBagGridInfo__Descriptor = Descriptor.MessageTypes[22];
      internal__static_CSDecorateBagGridInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagGridInfo, global::CSDecorateBagGridInfo.Builder>(internal__static_CSDecorateBagGridInfo__Descriptor,
              new string[] { "ItemId", "Type", "EndTime", });
      internal__static_CSDecorateBagInfo__Descriptor = Descriptor.MessageTypes[23];
      internal__static_CSDecorateBagInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagInfo, global::CSDecorateBagInfo.Builder>(internal__static_CSDecorateBagInfo__Descriptor,
              new string[] { "DecorateGridInfo", });
      internal__static_CSDecorateBagFetchRsp__Descriptor = Descriptor.MessageTypes[24];
      internal__static_CSDecorateBagFetchRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagFetchRsp, global::CSDecorateBagFetchRsp.Builder>(internal__static_CSDecorateBagFetchRsp__Descriptor,
              new string[] { "Type", "Id", "DecorateBagInfo", });
      internal__static_CSDecorateBagShowSetReq__Descriptor = Descriptor.MessageTypes[25];
      internal__static_CSDecorateBagShowSetReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagShowSetReq, global::CSDecorateBagShowSetReq.Builder>(internal__static_CSDecorateBagShowSetReq__Descriptor,
              new string[] { "Type", "Id", });
      internal__static_CSDecorateBagVIPFetchReq__Descriptor = Descriptor.MessageTypes[26];
      internal__static_CSDecorateBagVIPFetchReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagVIPFetchReq, global::CSDecorateBagVIPFetchReq.Builder>(internal__static_CSDecorateBagVIPFetchReq__Descriptor,
              new string[] { "Type", });
      internal__static_CSDecorateBagVIPItem__Descriptor = Descriptor.MessageTypes[27];
      internal__static_CSDecorateBagVIPItem__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagVIPItem, global::CSDecorateBagVIPItem.Builder>(internal__static_CSDecorateBagVIPItem__Descriptor,
              new string[] { "VipGrade", "VipExper", });
      internal__static_CSDecorateBagVIPList__Descriptor = Descriptor.MessageTypes[28];
      internal__static_CSDecorateBagVIPList__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagVIPList, global::CSDecorateBagVIPList.Builder>(internal__static_CSDecorateBagVIPList__Descriptor,
              new string[] { "VIPItemList", });
      internal__static_CSDecorateBagVIPFetchRsp__Descriptor = Descriptor.MessageTypes[29];
      internal__static_CSDecorateBagVIPFetchRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagVIPFetchRsp, global::CSDecorateBagVIPFetchRsp.Builder>(internal__static_CSDecorateBagVIPFetchRsp__Descriptor,
              new string[] { "Type", "Id", "DecorateBagInfo", "VipList", });
      internal__static_CSDecorateBagReqParam__Descriptor = Descriptor.MessageTypes[30];
      internal__static_CSDecorateBagReqParam__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagReqParam, global::CSDecorateBagReqParam.Builder>(internal__static_CSDecorateBagReqParam__Descriptor,
              new string[] { "FetchReq", "ShowSetReq", "VIPFetchReq", });
      internal__static_CSDecorateBagRspParam__Descriptor = Descriptor.MessageTypes[31];
      internal__static_CSDecorateBagRspParam__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagRspParam, global::CSDecorateBagRspParam.Builder>(internal__static_CSDecorateBagRspParam__Descriptor,
              new string[] { "FetchRsp", "VIPFetchRsp", });
      internal__static_CSDecorateBagReq__Descriptor = Descriptor.MessageTypes[32];
      internal__static_CSDecorateBagReq__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagReq, global::CSDecorateBagReq.Builder>(internal__static_CSDecorateBagReq__Descriptor,
              new string[] { "Cmd", "ReqParam", });
      internal__static_CSDecorateBagRsp__Descriptor = Descriptor.MessageTypes[33];
      internal__static_CSDecorateBagRsp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSDecorateBagRsp, global::CSDecorateBagRsp.Builder>(internal__static_CSDecorateBagRsp__Descriptor,
              new string[] { "Result", "Cmd", "RspParam", });
      internal__static_CSMsgBody__Descriptor = Descriptor.MessageTypes[34];
      internal__static_CSMsgBody__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSMsgBody, global::CSMsgBody.Builder>(internal__static_CSMsgBody__Descriptor,
              new string[] { "RegisterLoginReq", "RegisterLoginRsp", "BagReq", "BagRsp", "DecorateBagReq", "DecorateBagRsp", });
      internal__static_CSMsgHead__Descriptor = Descriptor.MessageTypes[35];
      internal__static_CSMsgHead__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSMsgHead, global::CSMsgHead.Builder>(internal__static_CSMsgHead__Descriptor,
              new string[] { "Uid", "MsgID", });
      internal__static_CSMsg__Descriptor = Descriptor.MessageTypes[36];
      internal__static_CSMsg__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSMsg, global::CSMsg.Builder>(internal__static_CSMsg__Descriptor,
              new string[] { "Head", "Body", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        global::DBmsg.Descriptor, 
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum CSRegisterLoginCmd {
  CSRegisterLoginCmd_Register = 1,
  CSRegisterLoginCmd_Login = 2,
  CSRegisterLoginCmd_Quit = 3,
}

public enum CSBagCmd {
  CSBagCmd_Fetch = 1,
  CSBagCmd_Use = 2,
}

public enum CSDecorateBagCmd {
  CSDecorateBagCmd_Fetch = 1,
  CSDecorateBagCmd_ShowSet = 2,
  CSDecorateBagCmd_VipFetch = 3,
}

public enum CSMsgID {
  CS_MSGID_MIN = 0,
  CS_MSGID_RegisterLogin = 1,
  CS_MSGID_BAG = 2,
  CS_MSGID_DecorateBAG = 3,
  CS_MSGID_MAX = 4,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSLoginReq : pb::GeneratedMessage<CSLoginReq, CSLoginReq.Builder> {
  private CSLoginReq() { }
  private static readonly CSLoginReq defaultInstance = new CSLoginReq().MakeReadOnly();
  private static readonly string[] _cSLoginReqFieldNames = new string[] { "account", "password" };
  private static readonly uint[] _cSLoginReqFieldTags = new uint[] { 10, 18 };
  public static CSLoginReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSLoginReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSLoginReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSLoginReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSLoginReq, CSLoginReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSLoginReq__FieldAccessorTable; }
  }
  
  public const int AccountFieldNumber = 1;
  private bool hasAccount;
  private string account_ = "";
  public bool HasAccount {
    get { return hasAccount; }
  }
  public string Account {
    get { return account_; }
  }
  
  public const int PasswordFieldNumber = 2;
  private bool hasPassword;
  private string password_ = "";
  public bool HasPassword {
    get { return hasPassword; }
  }
  public string Password {
    get { return password_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSLoginReqFieldNames;
    if (hasAccount) {
      output.WriteString(1, field_names[0], Account);
    }
    if (hasPassword) {
      output.WriteString(2, field_names[1], Password);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasAccount) {
      size += pb::CodedOutputStream.ComputeStringSize(1, Account);
    }
    if (hasPassword) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Password);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSLoginReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSLoginReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSLoginReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSLoginReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSLoginReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSLoginReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSLoginReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSLoginReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSLoginReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSLoginReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSLoginReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSLoginReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSLoginReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSLoginReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSLoginReq result;
    
    private CSLoginReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSLoginReq original = result;
        result = new CSLoginReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSLoginReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSLoginReq.Descriptor; }
    }
    
    public override CSLoginReq DefaultInstanceForType {
      get { return global::CSLoginReq.DefaultInstance; }
    }
    
    public override CSLoginReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSLoginReq) {
        return MergeFrom((CSLoginReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSLoginReq other) {
      if (other == global::CSLoginReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccount) {
        Account = other.Account;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSLoginReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSLoginReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasAccount = input.ReadString(ref result.account_);
            break;
          }
          case 18: {
            result.hasPassword = input.ReadString(ref result.password_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccount {
      get { return result.hasAccount; }
    }
    public string Account {
      get { return result.Account; }
      set { SetAccount(value); }
    }
    public Builder SetAccount(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAccount = true;
      result.account_ = value;
      return this;
    }
    public Builder ClearAccount() {
      PrepareBuilder();
      result.hasAccount = false;
      result.account_ = "";
      return this;
    }
    
    public bool HasPassword {
      get { return result.hasPassword; }
    }
    public string Password {
      get { return result.Password; }
      set { SetPassword(value); }
    }
    public Builder SetPassword(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPassword = true;
      result.password_ = value;
      return this;
    }
    public Builder ClearPassword() {
      PrepareBuilder();
      result.hasPassword = false;
      result.password_ = "";
      return this;
    }
  }
  static CSLoginReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSLoginRsp : pb::GeneratedMessage<CSLoginRsp, CSLoginRsp.Builder> {
  private CSLoginRsp() { }
  private static readonly CSLoginRsp defaultInstance = new CSLoginRsp().MakeReadOnly();
  private static readonly string[] _cSLoginRspFieldNames = new string[] { "Role", "type" };
  private static readonly uint[] _cSLoginRspFieldTags = new uint[] { 18, 8 };
  public static CSLoginRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSLoginRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSLoginRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSLoginRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSLoginRsp, CSLoginRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSLoginRsp__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public const int RoleFieldNumber = 2;
  private bool hasRole;
  private global::DBRoleInfo role_;
  public bool HasRole {
    get { return hasRole; }
  }
  public global::DBRoleInfo Role {
    get { return role_ ?? global::DBRoleInfo.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSLoginRspFieldNames;
    if (hasType) {
      output.WriteUInt32(1, field_names[1], Type);
    }
    if (hasRole) {
      output.WriteMessage(2, field_names[0], Role);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
    }
    if (hasRole) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, Role);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSLoginRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSLoginRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSLoginRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSLoginRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSLoginRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSLoginRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSLoginRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSLoginRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSLoginRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSLoginRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSLoginRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSLoginRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSLoginRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSLoginRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSLoginRsp result;
    
    private CSLoginRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSLoginRsp original = result;
        result = new CSLoginRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSLoginRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSLoginRsp.Descriptor; }
    }
    
    public override CSLoginRsp DefaultInstanceForType {
      get { return global::CSLoginRsp.DefaultInstance; }
    }
    
    public override CSLoginRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSLoginRsp) {
        return MergeFrom((CSLoginRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSLoginRsp other) {
      if (other == global::CSLoginRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasRole) {
        MergeRole(other.Role);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSLoginRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSLoginRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
          case 18: {
            global::DBRoleInfo.Builder subBuilder = global::DBRoleInfo.CreateBuilder();
            if (result.hasRole) {
              subBuilder.MergeFrom(Role);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Role = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
    
    public bool HasRole {
     get { return result.hasRole; }
    }
    public global::DBRoleInfo Role {
      get { return result.Role; }
      set { SetRole(value); }
    }
    public Builder SetRole(global::DBRoleInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRole = true;
      result.role_ = value;
      return this;
    }
    public Builder SetRole(global::DBRoleInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRole = true;
      result.role_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRole(global::DBRoleInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRole &&
          result.role_ != global::DBRoleInfo.DefaultInstance) {
          result.role_ = global::DBRoleInfo.CreateBuilder(result.role_).MergeFrom(value).BuildPartial();
      } else {
        result.role_ = value;
      }
      result.hasRole = true;
      return this;
    }
    public Builder ClearRole() {
      PrepareBuilder();
      result.hasRole = false;
      result.role_ = null;
      return this;
    }
  }
  static CSLoginRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSRegisterReq : pb::GeneratedMessage<CSRegisterReq, CSRegisterReq.Builder> {
  private CSRegisterReq() { }
  private static readonly CSRegisterReq defaultInstance = new CSRegisterReq().MakeReadOnly();
  private static readonly string[] _cSRegisterReqFieldNames = new string[] { "account", "name", "password" };
  private static readonly uint[] _cSRegisterReqFieldTags = new uint[] { 10, 26, 18 };
  public static CSRegisterReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSRegisterReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSRegisterReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSRegisterReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSRegisterReq, CSRegisterReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSRegisterReq__FieldAccessorTable; }
  }
  
  public const int AccountFieldNumber = 1;
  private bool hasAccount;
  private string account_ = "";
  public bool HasAccount {
    get { return hasAccount; }
  }
  public string Account {
    get { return account_; }
  }
  
  public const int PasswordFieldNumber = 2;
  private bool hasPassword;
  private string password_ = "";
  public bool HasPassword {
    get { return hasPassword; }
  }
  public string Password {
    get { return password_; }
  }
  
  public const int NameFieldNumber = 3;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSRegisterReqFieldNames;
    if (hasAccount) {
      output.WriteString(1, field_names[0], Account);
    }
    if (hasPassword) {
      output.WriteString(2, field_names[2], Password);
    }
    if (hasName) {
      output.WriteString(3, field_names[1], Name);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasAccount) {
      size += pb::CodedOutputStream.ComputeStringSize(1, Account);
    }
    if (hasPassword) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Password);
    }
    if (hasName) {
      size += pb::CodedOutputStream.ComputeStringSize(3, Name);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSRegisterReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSRegisterReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSRegisterReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSRegisterReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSRegisterReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSRegisterReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSRegisterReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSRegisterReq result;
    
    private CSRegisterReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSRegisterReq original = result;
        result = new CSRegisterReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSRegisterReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSRegisterReq.Descriptor; }
    }
    
    public override CSRegisterReq DefaultInstanceForType {
      get { return global::CSRegisterReq.DefaultInstance; }
    }
    
    public override CSRegisterReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSRegisterReq) {
        return MergeFrom((CSRegisterReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSRegisterReq other) {
      if (other == global::CSRegisterReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccount) {
        Account = other.Account;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSRegisterReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSRegisterReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasAccount = input.ReadString(ref result.account_);
            break;
          }
          case 18: {
            result.hasPassword = input.ReadString(ref result.password_);
            break;
          }
          case 26: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccount {
      get { return result.hasAccount; }
    }
    public string Account {
      get { return result.Account; }
      set { SetAccount(value); }
    }
    public Builder SetAccount(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAccount = true;
      result.account_ = value;
      return this;
    }
    public Builder ClearAccount() {
      PrepareBuilder();
      result.hasAccount = false;
      result.account_ = "";
      return this;
    }
    
    public bool HasPassword {
      get { return result.hasPassword; }
    }
    public string Password {
      get { return result.Password; }
      set { SetPassword(value); }
    }
    public Builder SetPassword(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPassword = true;
      result.password_ = value;
      return this;
    }
    public Builder ClearPassword() {
      PrepareBuilder();
      result.hasPassword = false;
      result.password_ = "";
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
  }
  static CSRegisterReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSRegisterRsp : pb::GeneratedMessage<CSRegisterRsp, CSRegisterRsp.Builder> {
  private CSRegisterRsp() { }
  private static readonly CSRegisterRsp defaultInstance = new CSRegisterRsp().MakeReadOnly();
  private static readonly string[] _cSRegisterRspFieldNames = new string[] { "type" };
  private static readonly uint[] _cSRegisterRspFieldTags = new uint[] { 8 };
  public static CSRegisterRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSRegisterRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSRegisterRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSRegisterRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSRegisterRsp, CSRegisterRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSRegisterRsp__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSRegisterRspFieldNames;
    if (hasType) {
      output.WriteUInt32(1, field_names[0], Type);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSRegisterRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSRegisterRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSRegisterRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSRegisterRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSRegisterRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSRegisterRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSRegisterRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSRegisterRsp result;
    
    private CSRegisterRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSRegisterRsp original = result;
        result = new CSRegisterRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSRegisterRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSRegisterRsp.Descriptor; }
    }
    
    public override CSRegisterRsp DefaultInstanceForType {
      get { return global::CSRegisterRsp.DefaultInstance; }
    }
    
    public override CSRegisterRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSRegisterRsp) {
        return MergeFrom((CSRegisterRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSRegisterRsp other) {
      if (other == global::CSRegisterRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSRegisterRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSRegisterRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
  }
  static CSRegisterRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSQuitReq : pb::GeneratedMessage<CSQuitReq, CSQuitReq.Builder> {
  private CSQuitReq() { }
  private static readonly CSQuitReq defaultInstance = new CSQuitReq().MakeReadOnly();
  private static readonly string[] _cSQuitReqFieldNames = new string[] { "pad" };
  private static readonly uint[] _cSQuitReqFieldTags = new uint[] { 8 };
  public static CSQuitReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSQuitReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSQuitReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSQuitReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSQuitReq, CSQuitReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSQuitReq__FieldAccessorTable; }
  }
  
  public const int PadFieldNumber = 1;
  private bool hasPad;
  private uint pad_;
  public bool HasPad {
    get { return hasPad; }
  }
  [global::System.CLSCompliant(false)]
  public uint Pad {
    get { return pad_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSQuitReqFieldNames;
    if (hasPad) {
      output.WriteUInt32(1, field_names[0], Pad);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasPad) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Pad);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSQuitReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSQuitReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSQuitReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSQuitReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSQuitReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSQuitReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSQuitReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSQuitReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSQuitReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSQuitReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSQuitReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSQuitReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSQuitReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSQuitReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSQuitReq result;
    
    private CSQuitReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSQuitReq original = result;
        result = new CSQuitReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSQuitReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSQuitReq.Descriptor; }
    }
    
    public override CSQuitReq DefaultInstanceForType {
      get { return global::CSQuitReq.DefaultInstance; }
    }
    
    public override CSQuitReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSQuitReq) {
        return MergeFrom((CSQuitReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSQuitReq other) {
      if (other == global::CSQuitReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPad) {
        Pad = other.Pad;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSQuitReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSQuitReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasPad = input.ReadUInt32(ref result.pad_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPad {
      get { return result.hasPad; }
    }
    [global::System.CLSCompliant(false)]
    public uint Pad {
      get { return result.Pad; }
      set { SetPad(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPad(uint value) {
      PrepareBuilder();
      result.hasPad = true;
      result.pad_ = value;
      return this;
    }
    public Builder ClearPad() {
      PrepareBuilder();
      result.hasPad = false;
      result.pad_ = 0;
      return this;
    }
  }
  static CSQuitReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSRegisterLoginReqParam : pb::GeneratedMessage<CSRegisterLoginReqParam, CSRegisterLoginReqParam.Builder> {
  private CSRegisterLoginReqParam() { }
  private static readonly CSRegisterLoginReqParam defaultInstance = new CSRegisterLoginReqParam().MakeReadOnly();
  private static readonly string[] _cSRegisterLoginReqParamFieldNames = new string[] { "LoginReq", "QuitReq", "RegisterReq" };
  private static readonly uint[] _cSRegisterLoginReqParamFieldTags = new uint[] { 10, 26, 18 };
  public static CSRegisterLoginReqParam DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSRegisterLoginReqParam DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSRegisterLoginReqParam ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSRegisterLoginReqParam__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSRegisterLoginReqParam, CSRegisterLoginReqParam.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSRegisterLoginReqParam__FieldAccessorTable; }
  }
  
  public const int LoginReqFieldNumber = 1;
  private bool hasLoginReq;
  private global::CSLoginReq loginReq_;
  public bool HasLoginReq {
    get { return hasLoginReq; }
  }
  public global::CSLoginReq LoginReq {
    get { return loginReq_ ?? global::CSLoginReq.DefaultInstance; }
  }
  
  public const int RegisterReqFieldNumber = 2;
  private bool hasRegisterReq;
  private global::CSRegisterReq registerReq_;
  public bool HasRegisterReq {
    get { return hasRegisterReq; }
  }
  public global::CSRegisterReq RegisterReq {
    get { return registerReq_ ?? global::CSRegisterReq.DefaultInstance; }
  }
  
  public const int QuitReqFieldNumber = 3;
  private bool hasQuitReq;
  private global::CSQuitReq quitReq_;
  public bool HasQuitReq {
    get { return hasQuitReq; }
  }
  public global::CSQuitReq QuitReq {
    get { return quitReq_ ?? global::CSQuitReq.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSRegisterLoginReqParamFieldNames;
    if (hasLoginReq) {
      output.WriteMessage(1, field_names[0], LoginReq);
    }
    if (hasRegisterReq) {
      output.WriteMessage(2, field_names[2], RegisterReq);
    }
    if (hasQuitReq) {
      output.WriteMessage(3, field_names[1], QuitReq);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasLoginReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, LoginReq);
    }
    if (hasRegisterReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, RegisterReq);
    }
    if (hasQuitReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, QuitReq);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSRegisterLoginReqParam ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterLoginReqParam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSRegisterLoginReqParam MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSRegisterLoginReqParam prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSRegisterLoginReqParam, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSRegisterLoginReqParam cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSRegisterLoginReqParam result;
    
    private CSRegisterLoginReqParam PrepareBuilder() {
      if (resultIsReadOnly) {
        CSRegisterLoginReqParam original = result;
        result = new CSRegisterLoginReqParam();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSRegisterLoginReqParam MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSRegisterLoginReqParam.Descriptor; }
    }
    
    public override CSRegisterLoginReqParam DefaultInstanceForType {
      get { return global::CSRegisterLoginReqParam.DefaultInstance; }
    }
    
    public override CSRegisterLoginReqParam BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSRegisterLoginReqParam) {
        return MergeFrom((CSRegisterLoginReqParam) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSRegisterLoginReqParam other) {
      if (other == global::CSRegisterLoginReqParam.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasLoginReq) {
        MergeLoginReq(other.LoginReq);
      }
      if (other.HasRegisterReq) {
        MergeRegisterReq(other.RegisterReq);
      }
      if (other.HasQuitReq) {
        MergeQuitReq(other.QuitReq);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSRegisterLoginReqParamFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSRegisterLoginReqParamFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSLoginReq.Builder subBuilder = global::CSLoginReq.CreateBuilder();
            if (result.hasLoginReq) {
              subBuilder.MergeFrom(LoginReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            LoginReq = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::CSRegisterReq.Builder subBuilder = global::CSRegisterReq.CreateBuilder();
            if (result.hasRegisterReq) {
              subBuilder.MergeFrom(RegisterReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            RegisterReq = subBuilder.BuildPartial();
            break;
          }
          case 26: {
            global::CSQuitReq.Builder subBuilder = global::CSQuitReq.CreateBuilder();
            if (result.hasQuitReq) {
              subBuilder.MergeFrom(QuitReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            QuitReq = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasLoginReq {
     get { return result.hasLoginReq; }
    }
    public global::CSLoginReq LoginReq {
      get { return result.LoginReq; }
      set { SetLoginReq(value); }
    }
    public Builder SetLoginReq(global::CSLoginReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasLoginReq = true;
      result.loginReq_ = value;
      return this;
    }
    public Builder SetLoginReq(global::CSLoginReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasLoginReq = true;
      result.loginReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeLoginReq(global::CSLoginReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasLoginReq &&
          result.loginReq_ != global::CSLoginReq.DefaultInstance) {
          result.loginReq_ = global::CSLoginReq.CreateBuilder(result.loginReq_).MergeFrom(value).BuildPartial();
      } else {
        result.loginReq_ = value;
      }
      result.hasLoginReq = true;
      return this;
    }
    public Builder ClearLoginReq() {
      PrepareBuilder();
      result.hasLoginReq = false;
      result.loginReq_ = null;
      return this;
    }
    
    public bool HasRegisterReq {
     get { return result.hasRegisterReq; }
    }
    public global::CSRegisterReq RegisterReq {
      get { return result.RegisterReq; }
      set { SetRegisterReq(value); }
    }
    public Builder SetRegisterReq(global::CSRegisterReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRegisterReq = true;
      result.registerReq_ = value;
      return this;
    }
    public Builder SetRegisterReq(global::CSRegisterReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRegisterReq = true;
      result.registerReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRegisterReq(global::CSRegisterReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRegisterReq &&
          result.registerReq_ != global::CSRegisterReq.DefaultInstance) {
          result.registerReq_ = global::CSRegisterReq.CreateBuilder(result.registerReq_).MergeFrom(value).BuildPartial();
      } else {
        result.registerReq_ = value;
      }
      result.hasRegisterReq = true;
      return this;
    }
    public Builder ClearRegisterReq() {
      PrepareBuilder();
      result.hasRegisterReq = false;
      result.registerReq_ = null;
      return this;
    }
    
    public bool HasQuitReq {
     get { return result.hasQuitReq; }
    }
    public global::CSQuitReq QuitReq {
      get { return result.QuitReq; }
      set { SetQuitReq(value); }
    }
    public Builder SetQuitReq(global::CSQuitReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasQuitReq = true;
      result.quitReq_ = value;
      return this;
    }
    public Builder SetQuitReq(global::CSQuitReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasQuitReq = true;
      result.quitReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeQuitReq(global::CSQuitReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasQuitReq &&
          result.quitReq_ != global::CSQuitReq.DefaultInstance) {
          result.quitReq_ = global::CSQuitReq.CreateBuilder(result.quitReq_).MergeFrom(value).BuildPartial();
      } else {
        result.quitReq_ = value;
      }
      result.hasQuitReq = true;
      return this;
    }
    public Builder ClearQuitReq() {
      PrepareBuilder();
      result.hasQuitReq = false;
      result.quitReq_ = null;
      return this;
    }
  }
  static CSRegisterLoginReqParam() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSRegisterLoginRspParam : pb::GeneratedMessage<CSRegisterLoginRspParam, CSRegisterLoginRspParam.Builder> {
  private CSRegisterLoginRspParam() { }
  private static readonly CSRegisterLoginRspParam defaultInstance = new CSRegisterLoginRspParam().MakeReadOnly();
  private static readonly string[] _cSRegisterLoginRspParamFieldNames = new string[] { "LoginRsp", "RegisterRsp" };
  private static readonly uint[] _cSRegisterLoginRspParamFieldTags = new uint[] { 10, 18 };
  public static CSRegisterLoginRspParam DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSRegisterLoginRspParam DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSRegisterLoginRspParam ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSRegisterLoginRspParam__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSRegisterLoginRspParam, CSRegisterLoginRspParam.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSRegisterLoginRspParam__FieldAccessorTable; }
  }
  
  public const int LoginRspFieldNumber = 1;
  private bool hasLoginRsp;
  private global::CSLoginRsp loginRsp_;
  public bool HasLoginRsp {
    get { return hasLoginRsp; }
  }
  public global::CSLoginRsp LoginRsp {
    get { return loginRsp_ ?? global::CSLoginRsp.DefaultInstance; }
  }
  
  public const int RegisterRspFieldNumber = 2;
  private bool hasRegisterRsp;
  private global::CSRegisterRsp registerRsp_;
  public bool HasRegisterRsp {
    get { return hasRegisterRsp; }
  }
  public global::CSRegisterRsp RegisterRsp {
    get { return registerRsp_ ?? global::CSRegisterRsp.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSRegisterLoginRspParamFieldNames;
    if (hasLoginRsp) {
      output.WriteMessage(1, field_names[0], LoginRsp);
    }
    if (hasRegisterRsp) {
      output.WriteMessage(2, field_names[1], RegisterRsp);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasLoginRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, LoginRsp);
    }
    if (hasRegisterRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, RegisterRsp);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSRegisterLoginRspParam ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterLoginRspParam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSRegisterLoginRspParam MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSRegisterLoginRspParam prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSRegisterLoginRspParam, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSRegisterLoginRspParam cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSRegisterLoginRspParam result;
    
    private CSRegisterLoginRspParam PrepareBuilder() {
      if (resultIsReadOnly) {
        CSRegisterLoginRspParam original = result;
        result = new CSRegisterLoginRspParam();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSRegisterLoginRspParam MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSRegisterLoginRspParam.Descriptor; }
    }
    
    public override CSRegisterLoginRspParam DefaultInstanceForType {
      get { return global::CSRegisterLoginRspParam.DefaultInstance; }
    }
    
    public override CSRegisterLoginRspParam BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSRegisterLoginRspParam) {
        return MergeFrom((CSRegisterLoginRspParam) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSRegisterLoginRspParam other) {
      if (other == global::CSRegisterLoginRspParam.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasLoginRsp) {
        MergeLoginRsp(other.LoginRsp);
      }
      if (other.HasRegisterRsp) {
        MergeRegisterRsp(other.RegisterRsp);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSRegisterLoginRspParamFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSRegisterLoginRspParamFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSLoginRsp.Builder subBuilder = global::CSLoginRsp.CreateBuilder();
            if (result.hasLoginRsp) {
              subBuilder.MergeFrom(LoginRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            LoginRsp = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::CSRegisterRsp.Builder subBuilder = global::CSRegisterRsp.CreateBuilder();
            if (result.hasRegisterRsp) {
              subBuilder.MergeFrom(RegisterRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            RegisterRsp = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasLoginRsp {
     get { return result.hasLoginRsp; }
    }
    public global::CSLoginRsp LoginRsp {
      get { return result.LoginRsp; }
      set { SetLoginRsp(value); }
    }
    public Builder SetLoginRsp(global::CSLoginRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasLoginRsp = true;
      result.loginRsp_ = value;
      return this;
    }
    public Builder SetLoginRsp(global::CSLoginRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasLoginRsp = true;
      result.loginRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeLoginRsp(global::CSLoginRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasLoginRsp &&
          result.loginRsp_ != global::CSLoginRsp.DefaultInstance) {
          result.loginRsp_ = global::CSLoginRsp.CreateBuilder(result.loginRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.loginRsp_ = value;
      }
      result.hasLoginRsp = true;
      return this;
    }
    public Builder ClearLoginRsp() {
      PrepareBuilder();
      result.hasLoginRsp = false;
      result.loginRsp_ = null;
      return this;
    }
    
    public bool HasRegisterRsp {
     get { return result.hasRegisterRsp; }
    }
    public global::CSRegisterRsp RegisterRsp {
      get { return result.RegisterRsp; }
      set { SetRegisterRsp(value); }
    }
    public Builder SetRegisterRsp(global::CSRegisterRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRegisterRsp = true;
      result.registerRsp_ = value;
      return this;
    }
    public Builder SetRegisterRsp(global::CSRegisterRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRegisterRsp = true;
      result.registerRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRegisterRsp(global::CSRegisterRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRegisterRsp &&
          result.registerRsp_ != global::CSRegisterRsp.DefaultInstance) {
          result.registerRsp_ = global::CSRegisterRsp.CreateBuilder(result.registerRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.registerRsp_ = value;
      }
      result.hasRegisterRsp = true;
      return this;
    }
    public Builder ClearRegisterRsp() {
      PrepareBuilder();
      result.hasRegisterRsp = false;
      result.registerRsp_ = null;
      return this;
    }
  }
  static CSRegisterLoginRspParam() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSRegisterLoginReq : pb::GeneratedMessage<CSRegisterLoginReq, CSRegisterLoginReq.Builder> {
  private CSRegisterLoginReq() { }
  private static readonly CSRegisterLoginReq defaultInstance = new CSRegisterLoginReq().MakeReadOnly();
  private static readonly string[] _cSRegisterLoginReqFieldNames = new string[] { "cmd", "reqParam" };
  private static readonly uint[] _cSRegisterLoginReqFieldTags = new uint[] { 8, 18 };
  public static CSRegisterLoginReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSRegisterLoginReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSRegisterLoginReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSRegisterLoginReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSRegisterLoginReq, CSRegisterLoginReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSRegisterLoginReq__FieldAccessorTable; }
  }
  
  public const int CmdFieldNumber = 1;
  private bool hasCmd;
  private global::CSRegisterLoginCmd cmd_ = global::CSRegisterLoginCmd.CSRegisterLoginCmd_Register;
  public bool HasCmd {
    get { return hasCmd; }
  }
  public global::CSRegisterLoginCmd Cmd {
    get { return cmd_; }
  }
  
  public const int ReqParamFieldNumber = 2;
  private bool hasReqParam;
  private global::CSRegisterLoginReqParam reqParam_;
  public bool HasReqParam {
    get { return hasReqParam; }
  }
  public global::CSRegisterLoginReqParam ReqParam {
    get { return reqParam_ ?? global::CSRegisterLoginReqParam.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCmd) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSRegisterLoginReqFieldNames;
    if (hasCmd) {
      output.WriteEnum(1, field_names[0], (int) Cmd, Cmd);
    }
    if (hasReqParam) {
      output.WriteMessage(2, field_names[1], ReqParam);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCmd) {
      size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Cmd);
    }
    if (hasReqParam) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, ReqParam);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSRegisterLoginReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterLoginReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterLoginReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterLoginReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSRegisterLoginReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSRegisterLoginReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterLoginReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSRegisterLoginReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSRegisterLoginReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSRegisterLoginReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSRegisterLoginReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSRegisterLoginReq result;
    
    private CSRegisterLoginReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSRegisterLoginReq original = result;
        result = new CSRegisterLoginReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSRegisterLoginReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSRegisterLoginReq.Descriptor; }
    }
    
    public override CSRegisterLoginReq DefaultInstanceForType {
      get { return global::CSRegisterLoginReq.DefaultInstance; }
    }
    
    public override CSRegisterLoginReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSRegisterLoginReq) {
        return MergeFrom((CSRegisterLoginReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSRegisterLoginReq other) {
      if (other == global::CSRegisterLoginReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCmd) {
        Cmd = other.Cmd;
      }
      if (other.HasReqParam) {
        MergeReqParam(other.ReqParam);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSRegisterLoginReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSRegisterLoginReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.cmd_, out unknown)) {
              result.hasCmd = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 18: {
            global::CSRegisterLoginReqParam.Builder subBuilder = global::CSRegisterLoginReqParam.CreateBuilder();
            if (result.hasReqParam) {
              subBuilder.MergeFrom(ReqParam);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ReqParam = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCmd {
     get { return result.hasCmd; }
    }
    public global::CSRegisterLoginCmd Cmd {
      get { return result.Cmd; }
      set { SetCmd(value); }
    }
    public Builder SetCmd(global::CSRegisterLoginCmd value) {
      PrepareBuilder();
      result.hasCmd = true;
      result.cmd_ = value;
      return this;
    }
    public Builder ClearCmd() {
      PrepareBuilder();
      result.hasCmd = false;
      result.cmd_ = global::CSRegisterLoginCmd.CSRegisterLoginCmd_Register;
      return this;
    }
    
    public bool HasReqParam {
     get { return result.hasReqParam; }
    }
    public global::CSRegisterLoginReqParam ReqParam {
      get { return result.ReqParam; }
      set { SetReqParam(value); }
    }
    public Builder SetReqParam(global::CSRegisterLoginReqParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasReqParam = true;
      result.reqParam_ = value;
      return this;
    }
    public Builder SetReqParam(global::CSRegisterLoginReqParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasReqParam = true;
      result.reqParam_ = builderForValue.Build();
      return this;
    }
    public Builder MergeReqParam(global::CSRegisterLoginReqParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasReqParam &&
          result.reqParam_ != global::CSRegisterLoginReqParam.DefaultInstance) {
          result.reqParam_ = global::CSRegisterLoginReqParam.CreateBuilder(result.reqParam_).MergeFrom(value).BuildPartial();
      } else {
        result.reqParam_ = value;
      }
      result.hasReqParam = true;
      return this;
    }
    public Builder ClearReqParam() {
      PrepareBuilder();
      result.hasReqParam = false;
      result.reqParam_ = null;
      return this;
    }
  }
  static CSRegisterLoginReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSRegisterLoginRsp : pb::GeneratedMessage<CSRegisterLoginRsp, CSRegisterLoginRsp.Builder> {
  private CSRegisterLoginRsp() { }
  private static readonly CSRegisterLoginRsp defaultInstance = new CSRegisterLoginRsp().MakeReadOnly();
  private static readonly string[] _cSRegisterLoginRspFieldNames = new string[] { "cmd", "result", "rspParam" };
  private static readonly uint[] _cSRegisterLoginRspFieldTags = new uint[] { 16, 8, 26 };
  public static CSRegisterLoginRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSRegisterLoginRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSRegisterLoginRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSRegisterLoginRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSRegisterLoginRsp, CSRegisterLoginRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSRegisterLoginRsp__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private int result_;
  public bool HasResult {
    get { return hasResult; }
  }
  public int Result {
    get { return result_; }
  }
  
  public const int CmdFieldNumber = 2;
  private bool hasCmd;
  private global::CSRegisterLoginCmd cmd_ = global::CSRegisterLoginCmd.CSRegisterLoginCmd_Register;
  public bool HasCmd {
    get { return hasCmd; }
  }
  public global::CSRegisterLoginCmd Cmd {
    get { return cmd_; }
  }
  
  public const int RspParamFieldNumber = 3;
  private bool hasRspParam;
  private global::CSRegisterLoginRspParam rspParam_;
  public bool HasRspParam {
    get { return hasRspParam; }
  }
  public global::CSRegisterLoginRspParam RspParam {
    get { return rspParam_ ?? global::CSRegisterLoginRspParam.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCmd) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSRegisterLoginRspFieldNames;
    if (hasResult) {
      output.WriteInt32(1, field_names[1], Result);
    }
    if (hasCmd) {
      output.WriteEnum(2, field_names[0], (int) Cmd, Cmd);
    }
    if (hasRspParam) {
      output.WriteMessage(3, field_names[2], RspParam);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasResult) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Result);
    }
    if (hasCmd) {
      size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Cmd);
    }
    if (hasRspParam) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, RspParam);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSRegisterLoginRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSRegisterLoginRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSRegisterLoginRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSRegisterLoginRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSRegisterLoginRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSRegisterLoginRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSRegisterLoginRsp result;
    
    private CSRegisterLoginRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSRegisterLoginRsp original = result;
        result = new CSRegisterLoginRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSRegisterLoginRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSRegisterLoginRsp.Descriptor; }
    }
    
    public override CSRegisterLoginRsp DefaultInstanceForType {
      get { return global::CSRegisterLoginRsp.DefaultInstance; }
    }
    
    public override CSRegisterLoginRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSRegisterLoginRsp) {
        return MergeFrom((CSRegisterLoginRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSRegisterLoginRsp other) {
      if (other == global::CSRegisterLoginRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasCmd) {
        Cmd = other.Cmd;
      }
      if (other.HasRspParam) {
        MergeRspParam(other.RspParam);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSRegisterLoginRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSRegisterLoginRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadInt32(ref result.result_);
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.cmd_, out unknown)) {
              result.hasCmd = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
          case 26: {
            global::CSRegisterLoginRspParam.Builder subBuilder = global::CSRegisterLoginRspParam.CreateBuilder();
            if (result.hasRspParam) {
              subBuilder.MergeFrom(RspParam);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            RspParam = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    public int Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    public Builder SetResult(int value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
    
    public bool HasCmd {
     get { return result.hasCmd; }
    }
    public global::CSRegisterLoginCmd Cmd {
      get { return result.Cmd; }
      set { SetCmd(value); }
    }
    public Builder SetCmd(global::CSRegisterLoginCmd value) {
      PrepareBuilder();
      result.hasCmd = true;
      result.cmd_ = value;
      return this;
    }
    public Builder ClearCmd() {
      PrepareBuilder();
      result.hasCmd = false;
      result.cmd_ = global::CSRegisterLoginCmd.CSRegisterLoginCmd_Register;
      return this;
    }
    
    public bool HasRspParam {
     get { return result.hasRspParam; }
    }
    public global::CSRegisterLoginRspParam RspParam {
      get { return result.RspParam; }
      set { SetRspParam(value); }
    }
    public Builder SetRspParam(global::CSRegisterLoginRspParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRspParam = true;
      result.rspParam_ = value;
      return this;
    }
    public Builder SetRspParam(global::CSRegisterLoginRspParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRspParam = true;
      result.rspParam_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRspParam(global::CSRegisterLoginRspParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRspParam &&
          result.rspParam_ != global::CSRegisterLoginRspParam.DefaultInstance) {
          result.rspParam_ = global::CSRegisterLoginRspParam.CreateBuilder(result.rspParam_).MergeFrom(value).BuildPartial();
      } else {
        result.rspParam_ = value;
      }
      result.hasRspParam = true;
      return this;
    }
    public Builder ClearRspParam() {
      PrepareBuilder();
      result.hasRspParam = false;
      result.rspParam_ = null;
      return this;
    }
  }
  static CSRegisterLoginRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagFetchReq : pb::GeneratedMessage<CSBagFetchReq, CSBagFetchReq.Builder> {
  private CSBagFetchReq() { }
  private static readonly CSBagFetchReq defaultInstance = new CSBagFetchReq().MakeReadOnly();
  private static readonly string[] _cSBagFetchReqFieldNames = new string[] { "pad" };
  private static readonly uint[] _cSBagFetchReqFieldTags = new uint[] { 8 };
  public static CSBagFetchReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagFetchReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagFetchReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagFetchReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagFetchReq, CSBagFetchReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagFetchReq__FieldAccessorTable; }
  }
  
  public const int PadFieldNumber = 1;
  private bool hasPad;
  private uint pad_;
  public bool HasPad {
    get { return hasPad; }
  }
  [global::System.CLSCompliant(false)]
  public uint Pad {
    get { return pad_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagFetchReqFieldNames;
    if (hasPad) {
      output.WriteUInt32(1, field_names[0], Pad);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasPad) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Pad);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagFetchReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagFetchReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagFetchReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagFetchReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagFetchReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagFetchReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagFetchReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagFetchReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagFetchReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagFetchReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagFetchReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagFetchReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagFetchReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagFetchReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagFetchReq result;
    
    private CSBagFetchReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagFetchReq original = result;
        result = new CSBagFetchReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagFetchReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagFetchReq.Descriptor; }
    }
    
    public override CSBagFetchReq DefaultInstanceForType {
      get { return global::CSBagFetchReq.DefaultInstance; }
    }
    
    public override CSBagFetchReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagFetchReq) {
        return MergeFrom((CSBagFetchReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagFetchReq other) {
      if (other == global::CSBagFetchReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPad) {
        Pad = other.Pad;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagFetchReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagFetchReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasPad = input.ReadUInt32(ref result.pad_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPad {
      get { return result.hasPad; }
    }
    [global::System.CLSCompliant(false)]
    public uint Pad {
      get { return result.Pad; }
      set { SetPad(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPad(uint value) {
      PrepareBuilder();
      result.hasPad = true;
      result.pad_ = value;
      return this;
    }
    public Builder ClearPad() {
      PrepareBuilder();
      result.hasPad = false;
      result.pad_ = 0;
      return this;
    }
  }
  static CSBagFetchReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagGridInfo : pb::GeneratedMessage<CSBagGridInfo, CSBagGridInfo.Builder> {
  private CSBagGridInfo() { }
  private static readonly CSBagGridInfo defaultInstance = new CSBagGridInfo().MakeReadOnly();
  private static readonly string[] _cSBagGridInfoFieldNames = new string[] { "ItemId", "Num" };
  private static readonly uint[] _cSBagGridInfoFieldTags = new uint[] { 8, 16 };
  public static CSBagGridInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagGridInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagGridInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagGridInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagGridInfo, CSBagGridInfo.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagGridInfo__FieldAccessorTable; }
  }
  
  public const int ItemIdFieldNumber = 1;
  private bool hasItemId;
  private uint itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemId {
    get { return itemId_; }
  }
  
  public const int NumFieldNumber = 2;
  private bool hasNum;
  private uint num_;
  public bool HasNum {
    get { return hasNum; }
  }
  [global::System.CLSCompliant(false)]
  public uint Num {
    get { return num_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagGridInfoFieldNames;
    if (hasItemId) {
      output.WriteUInt32(1, field_names[0], ItemId);
    }
    if (hasNum) {
      output.WriteUInt32(2, field_names[1], Num);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasItemId) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, ItemId);
    }
    if (hasNum) {
      size += pb::CodedOutputStream.ComputeUInt32Size(2, Num);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagGridInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagGridInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagGridInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagGridInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagGridInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagGridInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagGridInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagGridInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagGridInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagGridInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagGridInfo MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagGridInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagGridInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagGridInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagGridInfo result;
    
    private CSBagGridInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagGridInfo original = result;
        result = new CSBagGridInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagGridInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagGridInfo.Descriptor; }
    }
    
    public override CSBagGridInfo DefaultInstanceForType {
      get { return global::CSBagGridInfo.DefaultInstance; }
    }
    
    public override CSBagGridInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagGridInfo) {
        return MergeFrom((CSBagGridInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagGridInfo other) {
      if (other == global::CSBagGridInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagGridInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagGridInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemId = input.ReadUInt32(ref result.itemId_);
            break;
          }
          case 16: {
            result.hasNum = input.ReadUInt32(ref result.num_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(uint value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0;
      return this;
    }
    
    public bool HasNum {
      get { return result.hasNum; }
    }
    [global::System.CLSCompliant(false)]
    public uint Num {
      get { return result.Num; }
      set { SetNum(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNum(uint value) {
      PrepareBuilder();
      result.hasNum = true;
      result.num_ = value;
      return this;
    }
    public Builder ClearNum() {
      PrepareBuilder();
      result.hasNum = false;
      result.num_ = 0;
      return this;
    }
  }
  static CSBagGridInfo() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagBagInfo : pb::GeneratedMessage<CSBagBagInfo, CSBagBagInfo.Builder> {
  private CSBagBagInfo() { }
  private static readonly CSBagBagInfo defaultInstance = new CSBagBagInfo().MakeReadOnly();
  private static readonly string[] _cSBagBagInfoFieldNames = new string[] { "GridInfo" };
  private static readonly uint[] _cSBagBagInfoFieldTags = new uint[] { 10 };
  public static CSBagBagInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagBagInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagBagInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagBagInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagBagInfo, CSBagBagInfo.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagBagInfo__FieldAccessorTable; }
  }
  
  public const int GridInfoFieldNumber = 1;
  private pbc::PopsicleList<global::CSBagGridInfo> gridInfo_ = new pbc::PopsicleList<global::CSBagGridInfo>();
  public scg::IList<global::CSBagGridInfo> GridInfoList {
    get { return gridInfo_; }
  }
  public int GridInfoCount {
    get { return gridInfo_.Count; }
  }
  public global::CSBagGridInfo GetGridInfo(int index) {
    return gridInfo_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagBagInfoFieldNames;
    if (gridInfo_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], gridInfo_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::CSBagGridInfo element in GridInfoList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagBagInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagBagInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagBagInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagBagInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagBagInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagBagInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagBagInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagBagInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagBagInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagBagInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagBagInfo MakeReadOnly() {
    gridInfo_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagBagInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagBagInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagBagInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagBagInfo result;
    
    private CSBagBagInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagBagInfo original = result;
        result = new CSBagBagInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagBagInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagBagInfo.Descriptor; }
    }
    
    public override CSBagBagInfo DefaultInstanceForType {
      get { return global::CSBagBagInfo.DefaultInstance; }
    }
    
    public override CSBagBagInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagBagInfo) {
        return MergeFrom((CSBagBagInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagBagInfo other) {
      if (other == global::CSBagBagInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.gridInfo_.Count != 0) {
        result.gridInfo_.Add(other.gridInfo_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagBagInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagBagInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.gridInfo_, global::CSBagGridInfo.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CSBagGridInfo> GridInfoList {
      get { return PrepareBuilder().gridInfo_; }
    }
    public int GridInfoCount {
      get { return result.GridInfoCount; }
    }
    public global::CSBagGridInfo GetGridInfo(int index) {
      return result.GetGridInfo(index);
    }
    public Builder SetGridInfo(int index, global::CSBagGridInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.gridInfo_[index] = value;
      return this;
    }
    public Builder SetGridInfo(int index, global::CSBagGridInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.gridInfo_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddGridInfo(global::CSBagGridInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.gridInfo_.Add(value);
      return this;
    }
    public Builder AddGridInfo(global::CSBagGridInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.gridInfo_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeGridInfo(scg::IEnumerable<global::CSBagGridInfo> values) {
      PrepareBuilder();
      result.gridInfo_.Add(values);
      return this;
    }
    public Builder ClearGridInfo() {
      PrepareBuilder();
      result.gridInfo_.Clear();
      return this;
    }
  }
  static CSBagBagInfo() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagFetchRsp : pb::GeneratedMessage<CSBagFetchRsp, CSBagFetchRsp.Builder> {
  private CSBagFetchRsp() { }
  private static readonly CSBagFetchRsp defaultInstance = new CSBagFetchRsp().MakeReadOnly();
  private static readonly string[] _cSBagFetchRspFieldNames = new string[] { "BagInfo" };
  private static readonly uint[] _cSBagFetchRspFieldTags = new uint[] { 10 };
  public static CSBagFetchRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagFetchRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagFetchRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagFetchRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagFetchRsp, CSBagFetchRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagFetchRsp__FieldAccessorTable; }
  }
  
  public const int BagInfoFieldNumber = 1;
  private bool hasBagInfo;
  private global::CSBagBagInfo bagInfo_;
  public bool HasBagInfo {
    get { return hasBagInfo; }
  }
  public global::CSBagBagInfo BagInfo {
    get { return bagInfo_ ?? global::CSBagBagInfo.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagFetchRspFieldNames;
    if (hasBagInfo) {
      output.WriteMessage(1, field_names[0], BagInfo);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasBagInfo) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, BagInfo);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagFetchRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagFetchRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagFetchRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagFetchRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagFetchRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagFetchRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagFetchRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagFetchRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagFetchRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagFetchRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagFetchRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagFetchRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagFetchRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagFetchRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagFetchRsp result;
    
    private CSBagFetchRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagFetchRsp original = result;
        result = new CSBagFetchRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagFetchRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagFetchRsp.Descriptor; }
    }
    
    public override CSBagFetchRsp DefaultInstanceForType {
      get { return global::CSBagFetchRsp.DefaultInstance; }
    }
    
    public override CSBagFetchRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagFetchRsp) {
        return MergeFrom((CSBagFetchRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagFetchRsp other) {
      if (other == global::CSBagFetchRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasBagInfo) {
        MergeBagInfo(other.BagInfo);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagFetchRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagFetchRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSBagBagInfo.Builder subBuilder = global::CSBagBagInfo.CreateBuilder();
            if (result.hasBagInfo) {
              subBuilder.MergeFrom(BagInfo);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            BagInfo = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasBagInfo {
     get { return result.hasBagInfo; }
    }
    public global::CSBagBagInfo BagInfo {
      get { return result.BagInfo; }
      set { SetBagInfo(value); }
    }
    public Builder SetBagInfo(global::CSBagBagInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBagInfo = true;
      result.bagInfo_ = value;
      return this;
    }
    public Builder SetBagInfo(global::CSBagBagInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasBagInfo = true;
      result.bagInfo_ = builderForValue.Build();
      return this;
    }
    public Builder MergeBagInfo(global::CSBagBagInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasBagInfo &&
          result.bagInfo_ != global::CSBagBagInfo.DefaultInstance) {
          result.bagInfo_ = global::CSBagBagInfo.CreateBuilder(result.bagInfo_).MergeFrom(value).BuildPartial();
      } else {
        result.bagInfo_ = value;
      }
      result.hasBagInfo = true;
      return this;
    }
    public Builder ClearBagInfo() {
      PrepareBuilder();
      result.hasBagInfo = false;
      result.bagInfo_ = null;
      return this;
    }
  }
  static CSBagFetchRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagUseReq : pb::GeneratedMessage<CSBagUseReq, CSBagUseReq.Builder> {
  private CSBagUseReq() { }
  private static readonly CSBagUseReq defaultInstance = new CSBagUseReq().MakeReadOnly();
  private static readonly string[] _cSBagUseReqFieldNames = new string[] { "ItemId", "ItemNum", "PickedId" };
  private static readonly uint[] _cSBagUseReqFieldTags = new uint[] { 8, 16, 24 };
  public static CSBagUseReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagUseReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagUseReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagUseReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagUseReq, CSBagUseReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagUseReq__FieldAccessorTable; }
  }
  
  public const int ItemIdFieldNumber = 1;
  private bool hasItemId;
  private uint itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemId {
    get { return itemId_; }
  }
  
  public const int ItemNumFieldNumber = 2;
  private bool hasItemNum;
  private uint itemNum_;
  public bool HasItemNum {
    get { return hasItemNum; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemNum {
    get { return itemNum_; }
  }
  
  public const int PickedIdFieldNumber = 3;
  private bool hasPickedId;
  private uint pickedId_;
  public bool HasPickedId {
    get { return hasPickedId; }
  }
  [global::System.CLSCompliant(false)]
  public uint PickedId {
    get { return pickedId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagUseReqFieldNames;
    if (hasItemId) {
      output.WriteUInt32(1, field_names[0], ItemId);
    }
    if (hasItemNum) {
      output.WriteUInt32(2, field_names[1], ItemNum);
    }
    if (hasPickedId) {
      output.WriteUInt32(3, field_names[2], PickedId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasItemId) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, ItemId);
    }
    if (hasItemNum) {
      size += pb::CodedOutputStream.ComputeUInt32Size(2, ItemNum);
    }
    if (hasPickedId) {
      size += pb::CodedOutputStream.ComputeUInt32Size(3, PickedId);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagUseReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagUseReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagUseReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagUseReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagUseReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagUseReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagUseReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagUseReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagUseReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagUseReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagUseReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagUseReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagUseReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagUseReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagUseReq result;
    
    private CSBagUseReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagUseReq original = result;
        result = new CSBagUseReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagUseReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagUseReq.Descriptor; }
    }
    
    public override CSBagUseReq DefaultInstanceForType {
      get { return global::CSBagUseReq.DefaultInstance; }
    }
    
    public override CSBagUseReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagUseReq) {
        return MergeFrom((CSBagUseReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagUseReq other) {
      if (other == global::CSBagUseReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasItemNum) {
        ItemNum = other.ItemNum;
      }
      if (other.HasPickedId) {
        PickedId = other.PickedId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagUseReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagUseReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemId = input.ReadUInt32(ref result.itemId_);
            break;
          }
          case 16: {
            result.hasItemNum = input.ReadUInt32(ref result.itemNum_);
            break;
          }
          case 24: {
            result.hasPickedId = input.ReadUInt32(ref result.pickedId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(uint value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0;
      return this;
    }
    
    public bool HasItemNum {
      get { return result.hasItemNum; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemNum {
      get { return result.ItemNum; }
      set { SetItemNum(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemNum(uint value) {
      PrepareBuilder();
      result.hasItemNum = true;
      result.itemNum_ = value;
      return this;
    }
    public Builder ClearItemNum() {
      PrepareBuilder();
      result.hasItemNum = false;
      result.itemNum_ = 0;
      return this;
    }
    
    public bool HasPickedId {
      get { return result.hasPickedId; }
    }
    [global::System.CLSCompliant(false)]
    public uint PickedId {
      get { return result.PickedId; }
      set { SetPickedId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPickedId(uint value) {
      PrepareBuilder();
      result.hasPickedId = true;
      result.pickedId_ = value;
      return this;
    }
    public Builder ClearPickedId() {
      PrepareBuilder();
      result.hasPickedId = false;
      result.pickedId_ = 0;
      return this;
    }
  }
  static CSBagUseReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSItemInfo : pb::GeneratedMessage<CSItemInfo, CSItemInfo.Builder> {
  private CSItemInfo() { }
  private static readonly CSItemInfo defaultInstance = new CSItemInfo().MakeReadOnly();
  private static readonly string[] _cSItemInfoFieldNames = new string[] { "ID", "num" };
  private static readonly uint[] _cSItemInfoFieldTags = new uint[] { 8, 16 };
  public static CSItemInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSItemInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSItemInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSItemInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSItemInfo, CSItemInfo.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSItemInfo__FieldAccessorTable; }
  }
  
  public const int IDFieldNumber = 1;
  private bool hasID;
  private int iD_;
  public bool HasID {
    get { return hasID; }
  }
  public int ID {
    get { return iD_; }
  }
  
  public const int NumFieldNumber = 2;
  private bool hasNum;
  private int num_;
  public bool HasNum {
    get { return hasNum; }
  }
  public int Num {
    get { return num_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSItemInfoFieldNames;
    if (hasID) {
      output.WriteInt32(1, field_names[0], ID);
    }
    if (hasNum) {
      output.WriteInt32(2, field_names[1], Num);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, ID);
    }
    if (hasNum) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Num);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSItemInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSItemInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSItemInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSItemInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSItemInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSItemInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSItemInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSItemInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSItemInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSItemInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSItemInfo MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSItemInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSItemInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSItemInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSItemInfo result;
    
    private CSItemInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CSItemInfo original = result;
        result = new CSItemInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSItemInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSItemInfo.Descriptor; }
    }
    
    public override CSItemInfo DefaultInstanceForType {
      get { return global::CSItemInfo.DefaultInstance; }
    }
    
    public override CSItemInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSItemInfo) {
        return MergeFrom((CSItemInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSItemInfo other) {
      if (other == global::CSItemInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasID) {
        ID = other.ID;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSItemInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSItemInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasID = input.ReadInt32(ref result.iD_);
            break;
          }
          case 16: {
            result.hasNum = input.ReadInt32(ref result.num_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasID {
      get { return result.hasID; }
    }
    public int ID {
      get { return result.ID; }
      set { SetID(value); }
    }
    public Builder SetID(int value) {
      PrepareBuilder();
      result.hasID = true;
      result.iD_ = value;
      return this;
    }
    public Builder ClearID() {
      PrepareBuilder();
      result.hasID = false;
      result.iD_ = 0;
      return this;
    }
    
    public bool HasNum {
      get { return result.hasNum; }
    }
    public int Num {
      get { return result.Num; }
      set { SetNum(value); }
    }
    public Builder SetNum(int value) {
      PrepareBuilder();
      result.hasNum = true;
      result.num_ = value;
      return this;
    }
    public Builder ClearNum() {
      PrepareBuilder();
      result.hasNum = false;
      result.num_ = 0;
      return this;
    }
  }
  static CSItemInfo() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSItemInfoList : pb::GeneratedMessage<CSItemInfoList, CSItemInfoList.Builder> {
  private CSItemInfoList() { }
  private static readonly CSItemInfoList defaultInstance = new CSItemInfoList().MakeReadOnly();
  private static readonly string[] _cSItemInfoListFieldNames = new string[] { "ItemInfo" };
  private static readonly uint[] _cSItemInfoListFieldTags = new uint[] { 10 };
  public static CSItemInfoList DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSItemInfoList DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSItemInfoList ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSItemInfoList__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSItemInfoList, CSItemInfoList.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSItemInfoList__FieldAccessorTable; }
  }
  
  public const int ItemInfoFieldNumber = 1;
  private pbc::PopsicleList<global::CSItemInfo> itemInfo_ = new pbc::PopsicleList<global::CSItemInfo>();
  public scg::IList<global::CSItemInfo> ItemInfoList {
    get { return itemInfo_; }
  }
  public int ItemInfoCount {
    get { return itemInfo_.Count; }
  }
  public global::CSItemInfo GetItemInfo(int index) {
    return itemInfo_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSItemInfoListFieldNames;
    if (itemInfo_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], itemInfo_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::CSItemInfo element in ItemInfoList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSItemInfoList ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSItemInfoList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSItemInfoList ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSItemInfoList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSItemInfoList ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSItemInfoList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSItemInfoList ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSItemInfoList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSItemInfoList ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSItemInfoList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSItemInfoList MakeReadOnly() {
    itemInfo_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSItemInfoList prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSItemInfoList, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSItemInfoList cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSItemInfoList result;
    
    private CSItemInfoList PrepareBuilder() {
      if (resultIsReadOnly) {
        CSItemInfoList original = result;
        result = new CSItemInfoList();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSItemInfoList MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSItemInfoList.Descriptor; }
    }
    
    public override CSItemInfoList DefaultInstanceForType {
      get { return global::CSItemInfoList.DefaultInstance; }
    }
    
    public override CSItemInfoList BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSItemInfoList) {
        return MergeFrom((CSItemInfoList) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSItemInfoList other) {
      if (other == global::CSItemInfoList.DefaultInstance) return this;
      PrepareBuilder();
      if (other.itemInfo_.Count != 0) {
        result.itemInfo_.Add(other.itemInfo_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSItemInfoListFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSItemInfoListFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.itemInfo_, global::CSItemInfo.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CSItemInfo> ItemInfoList {
      get { return PrepareBuilder().itemInfo_; }
    }
    public int ItemInfoCount {
      get { return result.ItemInfoCount; }
    }
    public global::CSItemInfo GetItemInfo(int index) {
      return result.GetItemInfo(index);
    }
    public Builder SetItemInfo(int index, global::CSItemInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.itemInfo_[index] = value;
      return this;
    }
    public Builder SetItemInfo(int index, global::CSItemInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.itemInfo_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddItemInfo(global::CSItemInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.itemInfo_.Add(value);
      return this;
    }
    public Builder AddItemInfo(global::CSItemInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.itemInfo_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeItemInfo(scg::IEnumerable<global::CSItemInfo> values) {
      PrepareBuilder();
      result.itemInfo_.Add(values);
      return this;
    }
    public Builder ClearItemInfo() {
      PrepareBuilder();
      result.itemInfo_.Clear();
      return this;
    }
  }
  static CSItemInfoList() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagUseRsp : pb::GeneratedMessage<CSBagUseRsp, CSBagUseRsp.Builder> {
  private CSBagUseRsp() { }
  private static readonly CSBagUseRsp defaultInstance = new CSBagUseRsp().MakeReadOnly();
  private static readonly string[] _cSBagUseRspFieldNames = new string[] { "ItemInfoList" };
  private static readonly uint[] _cSBagUseRspFieldTags = new uint[] { 10 };
  public static CSBagUseRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagUseRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagUseRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagUseRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagUseRsp, CSBagUseRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagUseRsp__FieldAccessorTable; }
  }
  
  public const int ItemInfoListFieldNumber = 1;
  private bool hasItemInfoList;
  private global::CSItemInfoList itemInfoList_;
  public bool HasItemInfoList {
    get { return hasItemInfoList; }
  }
  public global::CSItemInfoList ItemInfoList {
    get { return itemInfoList_ ?? global::CSItemInfoList.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagUseRspFieldNames;
    if (hasItemInfoList) {
      output.WriteMessage(1, field_names[0], ItemInfoList);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasItemInfoList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, ItemInfoList);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagUseRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagUseRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagUseRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagUseRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagUseRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagUseRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagUseRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagUseRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagUseRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagUseRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagUseRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagUseRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagUseRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagUseRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagUseRsp result;
    
    private CSBagUseRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagUseRsp original = result;
        result = new CSBagUseRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagUseRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagUseRsp.Descriptor; }
    }
    
    public override CSBagUseRsp DefaultInstanceForType {
      get { return global::CSBagUseRsp.DefaultInstance; }
    }
    
    public override CSBagUseRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagUseRsp) {
        return MergeFrom((CSBagUseRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagUseRsp other) {
      if (other == global::CSBagUseRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemInfoList) {
        MergeItemInfoList(other.ItemInfoList);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagUseRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagUseRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSItemInfoList.Builder subBuilder = global::CSItemInfoList.CreateBuilder();
            if (result.hasItemInfoList) {
              subBuilder.MergeFrom(ItemInfoList);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ItemInfoList = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemInfoList {
     get { return result.hasItemInfoList; }
    }
    public global::CSItemInfoList ItemInfoList {
      get { return result.ItemInfoList; }
      set { SetItemInfoList(value); }
    }
    public Builder SetItemInfoList(global::CSItemInfoList value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItemInfoList = true;
      result.itemInfoList_ = value;
      return this;
    }
    public Builder SetItemInfoList(global::CSItemInfoList.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasItemInfoList = true;
      result.itemInfoList_ = builderForValue.Build();
      return this;
    }
    public Builder MergeItemInfoList(global::CSItemInfoList value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasItemInfoList &&
          result.itemInfoList_ != global::CSItemInfoList.DefaultInstance) {
          result.itemInfoList_ = global::CSItemInfoList.CreateBuilder(result.itemInfoList_).MergeFrom(value).BuildPartial();
      } else {
        result.itemInfoList_ = value;
      }
      result.hasItemInfoList = true;
      return this;
    }
    public Builder ClearItemInfoList() {
      PrepareBuilder();
      result.hasItemInfoList = false;
      result.itemInfoList_ = null;
      return this;
    }
  }
  static CSBagUseRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagReqParam : pb::GeneratedMessage<CSBagReqParam, CSBagReqParam.Builder> {
  private CSBagReqParam() { }
  private static readonly CSBagReqParam defaultInstance = new CSBagReqParam().MakeReadOnly();
  private static readonly string[] _cSBagReqParamFieldNames = new string[] { "FetchReq", "UseReq" };
  private static readonly uint[] _cSBagReqParamFieldTags = new uint[] { 10, 18 };
  public static CSBagReqParam DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagReqParam DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagReqParam ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagReqParam__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagReqParam, CSBagReqParam.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagReqParam__FieldAccessorTable; }
  }
  
  public const int FetchReqFieldNumber = 1;
  private bool hasFetchReq;
  private global::CSBagFetchReq fetchReq_;
  public bool HasFetchReq {
    get { return hasFetchReq; }
  }
  public global::CSBagFetchReq FetchReq {
    get { return fetchReq_ ?? global::CSBagFetchReq.DefaultInstance; }
  }
  
  public const int UseReqFieldNumber = 2;
  private bool hasUseReq;
  private global::CSBagUseReq useReq_;
  public bool HasUseReq {
    get { return hasUseReq; }
  }
  public global::CSBagUseReq UseReq {
    get { return useReq_ ?? global::CSBagUseReq.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagReqParamFieldNames;
    if (hasFetchReq) {
      output.WriteMessage(1, field_names[0], FetchReq);
    }
    if (hasUseReq) {
      output.WriteMessage(2, field_names[1], UseReq);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFetchReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, FetchReq);
    }
    if (hasUseReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, UseReq);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagReqParam ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagReqParam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagReqParam ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagReqParam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagReqParam ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagReqParam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagReqParam ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagReqParam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagReqParam ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagReqParam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagReqParam MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagReqParam prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagReqParam, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagReqParam cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagReqParam result;
    
    private CSBagReqParam PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagReqParam original = result;
        result = new CSBagReqParam();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagReqParam MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagReqParam.Descriptor; }
    }
    
    public override CSBagReqParam DefaultInstanceForType {
      get { return global::CSBagReqParam.DefaultInstance; }
    }
    
    public override CSBagReqParam BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagReqParam) {
        return MergeFrom((CSBagReqParam) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagReqParam other) {
      if (other == global::CSBagReqParam.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFetchReq) {
        MergeFetchReq(other.FetchReq);
      }
      if (other.HasUseReq) {
        MergeUseReq(other.UseReq);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagReqParamFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagReqParamFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSBagFetchReq.Builder subBuilder = global::CSBagFetchReq.CreateBuilder();
            if (result.hasFetchReq) {
              subBuilder.MergeFrom(FetchReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            FetchReq = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::CSBagUseReq.Builder subBuilder = global::CSBagUseReq.CreateBuilder();
            if (result.hasUseReq) {
              subBuilder.MergeFrom(UseReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            UseReq = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFetchReq {
     get { return result.hasFetchReq; }
    }
    public global::CSBagFetchReq FetchReq {
      get { return result.FetchReq; }
      set { SetFetchReq(value); }
    }
    public Builder SetFetchReq(global::CSBagFetchReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasFetchReq = true;
      result.fetchReq_ = value;
      return this;
    }
    public Builder SetFetchReq(global::CSBagFetchReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasFetchReq = true;
      result.fetchReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeFetchReq(global::CSBagFetchReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasFetchReq &&
          result.fetchReq_ != global::CSBagFetchReq.DefaultInstance) {
          result.fetchReq_ = global::CSBagFetchReq.CreateBuilder(result.fetchReq_).MergeFrom(value).BuildPartial();
      } else {
        result.fetchReq_ = value;
      }
      result.hasFetchReq = true;
      return this;
    }
    public Builder ClearFetchReq() {
      PrepareBuilder();
      result.hasFetchReq = false;
      result.fetchReq_ = null;
      return this;
    }
    
    public bool HasUseReq {
     get { return result.hasUseReq; }
    }
    public global::CSBagUseReq UseReq {
      get { return result.UseReq; }
      set { SetUseReq(value); }
    }
    public Builder SetUseReq(global::CSBagUseReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUseReq = true;
      result.useReq_ = value;
      return this;
    }
    public Builder SetUseReq(global::CSBagUseReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasUseReq = true;
      result.useReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeUseReq(global::CSBagUseReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasUseReq &&
          result.useReq_ != global::CSBagUseReq.DefaultInstance) {
          result.useReq_ = global::CSBagUseReq.CreateBuilder(result.useReq_).MergeFrom(value).BuildPartial();
      } else {
        result.useReq_ = value;
      }
      result.hasUseReq = true;
      return this;
    }
    public Builder ClearUseReq() {
      PrepareBuilder();
      result.hasUseReq = false;
      result.useReq_ = null;
      return this;
    }
  }
  static CSBagReqParam() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagRspParam : pb::GeneratedMessage<CSBagRspParam, CSBagRspParam.Builder> {
  private CSBagRspParam() { }
  private static readonly CSBagRspParam defaultInstance = new CSBagRspParam().MakeReadOnly();
  private static readonly string[] _cSBagRspParamFieldNames = new string[] { "FetchRsp", "UseRsp" };
  private static readonly uint[] _cSBagRspParamFieldTags = new uint[] { 10, 18 };
  public static CSBagRspParam DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagRspParam DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagRspParam ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagRspParam__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagRspParam, CSBagRspParam.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagRspParam__FieldAccessorTable; }
  }
  
  public const int FetchRspFieldNumber = 1;
  private bool hasFetchRsp;
  private global::CSBagFetchRsp fetchRsp_;
  public bool HasFetchRsp {
    get { return hasFetchRsp; }
  }
  public global::CSBagFetchRsp FetchRsp {
    get { return fetchRsp_ ?? global::CSBagFetchRsp.DefaultInstance; }
  }
  
  public const int UseRspFieldNumber = 2;
  private bool hasUseRsp;
  private global::CSBagUseRsp useRsp_;
  public bool HasUseRsp {
    get { return hasUseRsp; }
  }
  public global::CSBagUseRsp UseRsp {
    get { return useRsp_ ?? global::CSBagUseRsp.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagRspParamFieldNames;
    if (hasFetchRsp) {
      output.WriteMessage(1, field_names[0], FetchRsp);
    }
    if (hasUseRsp) {
      output.WriteMessage(2, field_names[1], UseRsp);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFetchRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, FetchRsp);
    }
    if (hasUseRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, UseRsp);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagRspParam ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagRspParam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagRspParam ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagRspParam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagRspParam ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagRspParam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagRspParam ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagRspParam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagRspParam ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagRspParam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagRspParam MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagRspParam prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagRspParam, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagRspParam cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagRspParam result;
    
    private CSBagRspParam PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagRspParam original = result;
        result = new CSBagRspParam();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagRspParam MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagRspParam.Descriptor; }
    }
    
    public override CSBagRspParam DefaultInstanceForType {
      get { return global::CSBagRspParam.DefaultInstance; }
    }
    
    public override CSBagRspParam BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagRspParam) {
        return MergeFrom((CSBagRspParam) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagRspParam other) {
      if (other == global::CSBagRspParam.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFetchRsp) {
        MergeFetchRsp(other.FetchRsp);
      }
      if (other.HasUseRsp) {
        MergeUseRsp(other.UseRsp);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagRspParamFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagRspParamFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSBagFetchRsp.Builder subBuilder = global::CSBagFetchRsp.CreateBuilder();
            if (result.hasFetchRsp) {
              subBuilder.MergeFrom(FetchRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            FetchRsp = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::CSBagUseRsp.Builder subBuilder = global::CSBagUseRsp.CreateBuilder();
            if (result.hasUseRsp) {
              subBuilder.MergeFrom(UseRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            UseRsp = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFetchRsp {
     get { return result.hasFetchRsp; }
    }
    public global::CSBagFetchRsp FetchRsp {
      get { return result.FetchRsp; }
      set { SetFetchRsp(value); }
    }
    public Builder SetFetchRsp(global::CSBagFetchRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasFetchRsp = true;
      result.fetchRsp_ = value;
      return this;
    }
    public Builder SetFetchRsp(global::CSBagFetchRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasFetchRsp = true;
      result.fetchRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeFetchRsp(global::CSBagFetchRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasFetchRsp &&
          result.fetchRsp_ != global::CSBagFetchRsp.DefaultInstance) {
          result.fetchRsp_ = global::CSBagFetchRsp.CreateBuilder(result.fetchRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.fetchRsp_ = value;
      }
      result.hasFetchRsp = true;
      return this;
    }
    public Builder ClearFetchRsp() {
      PrepareBuilder();
      result.hasFetchRsp = false;
      result.fetchRsp_ = null;
      return this;
    }
    
    public bool HasUseRsp {
     get { return result.hasUseRsp; }
    }
    public global::CSBagUseRsp UseRsp {
      get { return result.UseRsp; }
      set { SetUseRsp(value); }
    }
    public Builder SetUseRsp(global::CSBagUseRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUseRsp = true;
      result.useRsp_ = value;
      return this;
    }
    public Builder SetUseRsp(global::CSBagUseRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasUseRsp = true;
      result.useRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeUseRsp(global::CSBagUseRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasUseRsp &&
          result.useRsp_ != global::CSBagUseRsp.DefaultInstance) {
          result.useRsp_ = global::CSBagUseRsp.CreateBuilder(result.useRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.useRsp_ = value;
      }
      result.hasUseRsp = true;
      return this;
    }
    public Builder ClearUseRsp() {
      PrepareBuilder();
      result.hasUseRsp = false;
      result.useRsp_ = null;
      return this;
    }
  }
  static CSBagRspParam() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagReq : pb::GeneratedMessage<CSBagReq, CSBagReq.Builder> {
  private CSBagReq() { }
  private static readonly CSBagReq defaultInstance = new CSBagReq().MakeReadOnly();
  private static readonly string[] _cSBagReqFieldNames = new string[] { "cmd", "reqParam" };
  private static readonly uint[] _cSBagReqFieldTags = new uint[] { 8, 18 };
  public static CSBagReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagReq, CSBagReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagReq__FieldAccessorTable; }
  }
  
  public const int CmdFieldNumber = 1;
  private bool hasCmd;
  private global::CSBagCmd cmd_ = global::CSBagCmd.CSBagCmd_Fetch;
  public bool HasCmd {
    get { return hasCmd; }
  }
  public global::CSBagCmd Cmd {
    get { return cmd_; }
  }
  
  public const int ReqParamFieldNumber = 2;
  private bool hasReqParam;
  private global::CSBagReqParam reqParam_;
  public bool HasReqParam {
    get { return hasReqParam; }
  }
  public global::CSBagReqParam ReqParam {
    get { return reqParam_ ?? global::CSBagReqParam.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCmd) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagReqFieldNames;
    if (hasCmd) {
      output.WriteEnum(1, field_names[0], (int) Cmd, Cmd);
    }
    if (hasReqParam) {
      output.WriteMessage(2, field_names[1], ReqParam);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCmd) {
      size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Cmd);
    }
    if (hasReqParam) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, ReqParam);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagReq result;
    
    private CSBagReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagReq original = result;
        result = new CSBagReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagReq.Descriptor; }
    }
    
    public override CSBagReq DefaultInstanceForType {
      get { return global::CSBagReq.DefaultInstance; }
    }
    
    public override CSBagReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagReq) {
        return MergeFrom((CSBagReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagReq other) {
      if (other == global::CSBagReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCmd) {
        Cmd = other.Cmd;
      }
      if (other.HasReqParam) {
        MergeReqParam(other.ReqParam);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.cmd_, out unknown)) {
              result.hasCmd = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 18: {
            global::CSBagReqParam.Builder subBuilder = global::CSBagReqParam.CreateBuilder();
            if (result.hasReqParam) {
              subBuilder.MergeFrom(ReqParam);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ReqParam = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCmd {
     get { return result.hasCmd; }
    }
    public global::CSBagCmd Cmd {
      get { return result.Cmd; }
      set { SetCmd(value); }
    }
    public Builder SetCmd(global::CSBagCmd value) {
      PrepareBuilder();
      result.hasCmd = true;
      result.cmd_ = value;
      return this;
    }
    public Builder ClearCmd() {
      PrepareBuilder();
      result.hasCmd = false;
      result.cmd_ = global::CSBagCmd.CSBagCmd_Fetch;
      return this;
    }
    
    public bool HasReqParam {
     get { return result.hasReqParam; }
    }
    public global::CSBagReqParam ReqParam {
      get { return result.ReqParam; }
      set { SetReqParam(value); }
    }
    public Builder SetReqParam(global::CSBagReqParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasReqParam = true;
      result.reqParam_ = value;
      return this;
    }
    public Builder SetReqParam(global::CSBagReqParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasReqParam = true;
      result.reqParam_ = builderForValue.Build();
      return this;
    }
    public Builder MergeReqParam(global::CSBagReqParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasReqParam &&
          result.reqParam_ != global::CSBagReqParam.DefaultInstance) {
          result.reqParam_ = global::CSBagReqParam.CreateBuilder(result.reqParam_).MergeFrom(value).BuildPartial();
      } else {
        result.reqParam_ = value;
      }
      result.hasReqParam = true;
      return this;
    }
    public Builder ClearReqParam() {
      PrepareBuilder();
      result.hasReqParam = false;
      result.reqParam_ = null;
      return this;
    }
  }
  static CSBagReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSBagRsp : pb::GeneratedMessage<CSBagRsp, CSBagRsp.Builder> {
  private CSBagRsp() { }
  private static readonly CSBagRsp defaultInstance = new CSBagRsp().MakeReadOnly();
  private static readonly string[] _cSBagRspFieldNames = new string[] { "cmd", "result", "rspParam" };
  private static readonly uint[] _cSBagRspFieldTags = new uint[] { 16, 8, 26 };
  public static CSBagRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSBagRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSBagRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSBagRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSBagRsp, CSBagRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSBagRsp__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private int result_;
  public bool HasResult {
    get { return hasResult; }
  }
  public int Result {
    get { return result_; }
  }
  
  public const int CmdFieldNumber = 2;
  private bool hasCmd;
  private global::CSBagCmd cmd_ = global::CSBagCmd.CSBagCmd_Fetch;
  public bool HasCmd {
    get { return hasCmd; }
  }
  public global::CSBagCmd Cmd {
    get { return cmd_; }
  }
  
  public const int RspParamFieldNumber = 3;
  private bool hasRspParam;
  private global::CSBagRspParam rspParam_;
  public bool HasRspParam {
    get { return hasRspParam; }
  }
  public global::CSBagRspParam RspParam {
    get { return rspParam_ ?? global::CSBagRspParam.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCmd) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSBagRspFieldNames;
    if (hasResult) {
      output.WriteInt32(1, field_names[1], Result);
    }
    if (hasCmd) {
      output.WriteEnum(2, field_names[0], (int) Cmd, Cmd);
    }
    if (hasRspParam) {
      output.WriteMessage(3, field_names[2], RspParam);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasResult) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Result);
    }
    if (hasCmd) {
      size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Cmd);
    }
    if (hasRspParam) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, RspParam);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSBagRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSBagRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSBagRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSBagRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSBagRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSBagRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSBagRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSBagRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSBagRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSBagRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSBagRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSBagRsp result;
    
    private CSBagRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSBagRsp original = result;
        result = new CSBagRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSBagRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSBagRsp.Descriptor; }
    }
    
    public override CSBagRsp DefaultInstanceForType {
      get { return global::CSBagRsp.DefaultInstance; }
    }
    
    public override CSBagRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSBagRsp) {
        return MergeFrom((CSBagRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSBagRsp other) {
      if (other == global::CSBagRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasCmd) {
        Cmd = other.Cmd;
      }
      if (other.HasRspParam) {
        MergeRspParam(other.RspParam);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSBagRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSBagRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadInt32(ref result.result_);
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.cmd_, out unknown)) {
              result.hasCmd = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
          case 26: {
            global::CSBagRspParam.Builder subBuilder = global::CSBagRspParam.CreateBuilder();
            if (result.hasRspParam) {
              subBuilder.MergeFrom(RspParam);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            RspParam = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    public int Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    public Builder SetResult(int value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
    
    public bool HasCmd {
     get { return result.hasCmd; }
    }
    public global::CSBagCmd Cmd {
      get { return result.Cmd; }
      set { SetCmd(value); }
    }
    public Builder SetCmd(global::CSBagCmd value) {
      PrepareBuilder();
      result.hasCmd = true;
      result.cmd_ = value;
      return this;
    }
    public Builder ClearCmd() {
      PrepareBuilder();
      result.hasCmd = false;
      result.cmd_ = global::CSBagCmd.CSBagCmd_Fetch;
      return this;
    }
    
    public bool HasRspParam {
     get { return result.hasRspParam; }
    }
    public global::CSBagRspParam RspParam {
      get { return result.RspParam; }
      set { SetRspParam(value); }
    }
    public Builder SetRspParam(global::CSBagRspParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRspParam = true;
      result.rspParam_ = value;
      return this;
    }
    public Builder SetRspParam(global::CSBagRspParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRspParam = true;
      result.rspParam_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRspParam(global::CSBagRspParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRspParam &&
          result.rspParam_ != global::CSBagRspParam.DefaultInstance) {
          result.rspParam_ = global::CSBagRspParam.CreateBuilder(result.rspParam_).MergeFrom(value).BuildPartial();
      } else {
        result.rspParam_ = value;
      }
      result.hasRspParam = true;
      return this;
    }
    public Builder ClearRspParam() {
      PrepareBuilder();
      result.hasRspParam = false;
      result.rspParam_ = null;
      return this;
    }
  }
  static CSBagRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagFetchReq : pb::GeneratedMessage<CSDecorateBagFetchReq, CSDecorateBagFetchReq.Builder> {
  private CSDecorateBagFetchReq() { }
  private static readonly CSDecorateBagFetchReq defaultInstance = new CSDecorateBagFetchReq().MakeReadOnly();
  private static readonly string[] _cSDecorateBagFetchReqFieldNames = new string[] { "type" };
  private static readonly uint[] _cSDecorateBagFetchReqFieldTags = new uint[] { 8 };
  public static CSDecorateBagFetchReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagFetchReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagFetchReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagFetchReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagFetchReq, CSDecorateBagFetchReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagFetchReq__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagFetchReqFieldNames;
    if (hasType) {
      output.WriteUInt32(1, field_names[0], Type);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagFetchReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagFetchReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagFetchReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagFetchReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagFetchReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagFetchReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagFetchReq result;
    
    private CSDecorateBagFetchReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagFetchReq original = result;
        result = new CSDecorateBagFetchReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagFetchReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagFetchReq.Descriptor; }
    }
    
    public override CSDecorateBagFetchReq DefaultInstanceForType {
      get { return global::CSDecorateBagFetchReq.DefaultInstance; }
    }
    
    public override CSDecorateBagFetchReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagFetchReq) {
        return MergeFrom((CSDecorateBagFetchReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagFetchReq other) {
      if (other == global::CSDecorateBagFetchReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagFetchReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagFetchReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
  }
  static CSDecorateBagFetchReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagGridInfo : pb::GeneratedMessage<CSDecorateBagGridInfo, CSDecorateBagGridInfo.Builder> {
  private CSDecorateBagGridInfo() { }
  private static readonly CSDecorateBagGridInfo defaultInstance = new CSDecorateBagGridInfo().MakeReadOnly();
  private static readonly string[] _cSDecorateBagGridInfoFieldNames = new string[] { "EndTime", "ItemId", "type" };
  private static readonly uint[] _cSDecorateBagGridInfoFieldTags = new uint[] { 24, 8, 16 };
  public static CSDecorateBagGridInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagGridInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagGridInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagGridInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagGridInfo, CSDecorateBagGridInfo.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagGridInfo__FieldAccessorTable; }
  }
  
  public const int ItemIdFieldNumber = 1;
  private bool hasItemId;
  private uint itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemId {
    get { return itemId_; }
  }
  
  public const int TypeFieldNumber = 2;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public const int EndTimeFieldNumber = 3;
  private bool hasEndTime;
  private ulong endTime_;
  public bool HasEndTime {
    get { return hasEndTime; }
  }
  [global::System.CLSCompliant(false)]
  public ulong EndTime {
    get { return endTime_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagGridInfoFieldNames;
    if (hasItemId) {
      output.WriteUInt32(1, field_names[1], ItemId);
    }
    if (hasType) {
      output.WriteUInt32(2, field_names[2], Type);
    }
    if (hasEndTime) {
      output.WriteUInt64(3, field_names[0], EndTime);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasItemId) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, ItemId);
    }
    if (hasType) {
      size += pb::CodedOutputStream.ComputeUInt32Size(2, Type);
    }
    if (hasEndTime) {
      size += pb::CodedOutputStream.ComputeUInt64Size(3, EndTime);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagGridInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagGridInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagGridInfo MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagGridInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagGridInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagGridInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagGridInfo result;
    
    private CSDecorateBagGridInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagGridInfo original = result;
        result = new CSDecorateBagGridInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagGridInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagGridInfo.Descriptor; }
    }
    
    public override CSDecorateBagGridInfo DefaultInstanceForType {
      get { return global::CSDecorateBagGridInfo.DefaultInstance; }
    }
    
    public override CSDecorateBagGridInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagGridInfo) {
        return MergeFrom((CSDecorateBagGridInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagGridInfo other) {
      if (other == global::CSDecorateBagGridInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagGridInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagGridInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemId = input.ReadUInt32(ref result.itemId_);
            break;
          }
          case 16: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
          case 24: {
            result.hasEndTime = input.ReadUInt64(ref result.endTime_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(uint value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0;
      return this;
    }
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
    
    public bool HasEndTime {
      get { return result.hasEndTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong EndTime {
      get { return result.EndTime; }
      set { SetEndTime(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEndTime(ulong value) {
      PrepareBuilder();
      result.hasEndTime = true;
      result.endTime_ = value;
      return this;
    }
    public Builder ClearEndTime() {
      PrepareBuilder();
      result.hasEndTime = false;
      result.endTime_ = 0UL;
      return this;
    }
  }
  static CSDecorateBagGridInfo() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagInfo : pb::GeneratedMessage<CSDecorateBagInfo, CSDecorateBagInfo.Builder> {
  private CSDecorateBagInfo() { }
  private static readonly CSDecorateBagInfo defaultInstance = new CSDecorateBagInfo().MakeReadOnly();
  private static readonly string[] _cSDecorateBagInfoFieldNames = new string[] { "DecorateGridInfo" };
  private static readonly uint[] _cSDecorateBagInfoFieldTags = new uint[] { 10 };
  public static CSDecorateBagInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagInfo, CSDecorateBagInfo.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagInfo__FieldAccessorTable; }
  }
  
  public const int DecorateGridInfoFieldNumber = 1;
  private pbc::PopsicleList<global::CSDecorateBagGridInfo> decorateGridInfo_ = new pbc::PopsicleList<global::CSDecorateBagGridInfo>();
  public scg::IList<global::CSDecorateBagGridInfo> DecorateGridInfoList {
    get { return decorateGridInfo_; }
  }
  public int DecorateGridInfoCount {
    get { return decorateGridInfo_.Count; }
  }
  public global::CSDecorateBagGridInfo GetDecorateGridInfo(int index) {
    return decorateGridInfo_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagInfoFieldNames;
    if (decorateGridInfo_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], decorateGridInfo_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::CSDecorateBagGridInfo element in DecorateGridInfoList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagInfo MakeReadOnly() {
    decorateGridInfo_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagInfo result;
    
    private CSDecorateBagInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagInfo original = result;
        result = new CSDecorateBagInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagInfo.Descriptor; }
    }
    
    public override CSDecorateBagInfo DefaultInstanceForType {
      get { return global::CSDecorateBagInfo.DefaultInstance; }
    }
    
    public override CSDecorateBagInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagInfo) {
        return MergeFrom((CSDecorateBagInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagInfo other) {
      if (other == global::CSDecorateBagInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.decorateGridInfo_.Count != 0) {
        result.decorateGridInfo_.Add(other.decorateGridInfo_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.decorateGridInfo_, global::CSDecorateBagGridInfo.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CSDecorateBagGridInfo> DecorateGridInfoList {
      get { return PrepareBuilder().decorateGridInfo_; }
    }
    public int DecorateGridInfoCount {
      get { return result.DecorateGridInfoCount; }
    }
    public global::CSDecorateBagGridInfo GetDecorateGridInfo(int index) {
      return result.GetDecorateGridInfo(index);
    }
    public Builder SetDecorateGridInfo(int index, global::CSDecorateBagGridInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.decorateGridInfo_[index] = value;
      return this;
    }
    public Builder SetDecorateGridInfo(int index, global::CSDecorateBagGridInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.decorateGridInfo_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddDecorateGridInfo(global::CSDecorateBagGridInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.decorateGridInfo_.Add(value);
      return this;
    }
    public Builder AddDecorateGridInfo(global::CSDecorateBagGridInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.decorateGridInfo_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeDecorateGridInfo(scg::IEnumerable<global::CSDecorateBagGridInfo> values) {
      PrepareBuilder();
      result.decorateGridInfo_.Add(values);
      return this;
    }
    public Builder ClearDecorateGridInfo() {
      PrepareBuilder();
      result.decorateGridInfo_.Clear();
      return this;
    }
  }
  static CSDecorateBagInfo() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagFetchRsp : pb::GeneratedMessage<CSDecorateBagFetchRsp, CSDecorateBagFetchRsp.Builder> {
  private CSDecorateBagFetchRsp() { }
  private static readonly CSDecorateBagFetchRsp defaultInstance = new CSDecorateBagFetchRsp().MakeReadOnly();
  private static readonly string[] _cSDecorateBagFetchRspFieldNames = new string[] { "DecorateBagInfo", "id", "type" };
  private static readonly uint[] _cSDecorateBagFetchRspFieldTags = new uint[] { 26, 16, 8 };
  public static CSDecorateBagFetchRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagFetchRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagFetchRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagFetchRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagFetchRsp, CSDecorateBagFetchRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagFetchRsp__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public const int IdFieldNumber = 2;
  private bool hasId;
  private uint id_;
  public bool HasId {
    get { return hasId; }
  }
  [global::System.CLSCompliant(false)]
  public uint Id {
    get { return id_; }
  }
  
  public const int DecorateBagInfoFieldNumber = 3;
  private bool hasDecorateBagInfo;
  private global::CSDecorateBagInfo decorateBagInfo_;
  public bool HasDecorateBagInfo {
    get { return hasDecorateBagInfo; }
  }
  public global::CSDecorateBagInfo DecorateBagInfo {
    get { return decorateBagInfo_ ?? global::CSDecorateBagInfo.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagFetchRspFieldNames;
    if (hasType) {
      output.WriteUInt32(1, field_names[2], Type);
    }
    if (hasId) {
      output.WriteUInt32(2, field_names[1], Id);
    }
    if (hasDecorateBagInfo) {
      output.WriteMessage(3, field_names[0], DecorateBagInfo);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
    }
    if (hasId) {
      size += pb::CodedOutputStream.ComputeUInt32Size(2, Id);
    }
    if (hasDecorateBagInfo) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, DecorateBagInfo);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagFetchRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagFetchRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagFetchRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagFetchRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagFetchRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagFetchRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagFetchRsp result;
    
    private CSDecorateBagFetchRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagFetchRsp original = result;
        result = new CSDecorateBagFetchRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagFetchRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagFetchRsp.Descriptor; }
    }
    
    public override CSDecorateBagFetchRsp DefaultInstanceForType {
      get { return global::CSDecorateBagFetchRsp.DefaultInstance; }
    }
    
    public override CSDecorateBagFetchRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagFetchRsp) {
        return MergeFrom((CSDecorateBagFetchRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagFetchRsp other) {
      if (other == global::CSDecorateBagFetchRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasDecorateBagInfo) {
        MergeDecorateBagInfo(other.DecorateBagInfo);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagFetchRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagFetchRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
          case 16: {
            result.hasId = input.ReadUInt32(ref result.id_);
            break;
          }
          case 26: {
            global::CSDecorateBagInfo.Builder subBuilder = global::CSDecorateBagInfo.CreateBuilder();
            if (result.hasDecorateBagInfo) {
              subBuilder.MergeFrom(DecorateBagInfo);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            DecorateBagInfo = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
    
    public bool HasId {
      get { return result.hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetId(uint value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
    
    public bool HasDecorateBagInfo {
     get { return result.hasDecorateBagInfo; }
    }
    public global::CSDecorateBagInfo DecorateBagInfo {
      get { return result.DecorateBagInfo; }
      set { SetDecorateBagInfo(value); }
    }
    public Builder SetDecorateBagInfo(global::CSDecorateBagInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDecorateBagInfo = true;
      result.decorateBagInfo_ = value;
      return this;
    }
    public Builder SetDecorateBagInfo(global::CSDecorateBagInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasDecorateBagInfo = true;
      result.decorateBagInfo_ = builderForValue.Build();
      return this;
    }
    public Builder MergeDecorateBagInfo(global::CSDecorateBagInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasDecorateBagInfo &&
          result.decorateBagInfo_ != global::CSDecorateBagInfo.DefaultInstance) {
          result.decorateBagInfo_ = global::CSDecorateBagInfo.CreateBuilder(result.decorateBagInfo_).MergeFrom(value).BuildPartial();
      } else {
        result.decorateBagInfo_ = value;
      }
      result.hasDecorateBagInfo = true;
      return this;
    }
    public Builder ClearDecorateBagInfo() {
      PrepareBuilder();
      result.hasDecorateBagInfo = false;
      result.decorateBagInfo_ = null;
      return this;
    }
  }
  static CSDecorateBagFetchRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagShowSetReq : pb::GeneratedMessage<CSDecorateBagShowSetReq, CSDecorateBagShowSetReq.Builder> {
  private CSDecorateBagShowSetReq() { }
  private static readonly CSDecorateBagShowSetReq defaultInstance = new CSDecorateBagShowSetReq().MakeReadOnly();
  private static readonly string[] _cSDecorateBagShowSetReqFieldNames = new string[] { "Type", "id" };
  private static readonly uint[] _cSDecorateBagShowSetReqFieldTags = new uint[] { 8, 16 };
  public static CSDecorateBagShowSetReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagShowSetReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagShowSetReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagShowSetReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagShowSetReq, CSDecorateBagShowSetReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagShowSetReq__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public const int IdFieldNumber = 2;
  private bool hasId;
  private uint id_;
  public bool HasId {
    get { return hasId; }
  }
  [global::System.CLSCompliant(false)]
  public uint Id {
    get { return id_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagShowSetReqFieldNames;
    if (hasType) {
      output.WriteUInt32(1, field_names[0], Type);
    }
    if (hasId) {
      output.WriteUInt32(2, field_names[1], Id);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
    }
    if (hasId) {
      size += pb::CodedOutputStream.ComputeUInt32Size(2, Id);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagShowSetReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagShowSetReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagShowSetReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagShowSetReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagShowSetReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagShowSetReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagShowSetReq result;
    
    private CSDecorateBagShowSetReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagShowSetReq original = result;
        result = new CSDecorateBagShowSetReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagShowSetReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagShowSetReq.Descriptor; }
    }
    
    public override CSDecorateBagShowSetReq DefaultInstanceForType {
      get { return global::CSDecorateBagShowSetReq.DefaultInstance; }
    }
    
    public override CSDecorateBagShowSetReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagShowSetReq) {
        return MergeFrom((CSDecorateBagShowSetReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagShowSetReq other) {
      if (other == global::CSDecorateBagShowSetReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagShowSetReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagShowSetReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
          case 16: {
            result.hasId = input.ReadUInt32(ref result.id_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
    
    public bool HasId {
      get { return result.hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetId(uint value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
  }
  static CSDecorateBagShowSetReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagVIPFetchReq : pb::GeneratedMessage<CSDecorateBagVIPFetchReq, CSDecorateBagVIPFetchReq.Builder> {
  private CSDecorateBagVIPFetchReq() { }
  private static readonly CSDecorateBagVIPFetchReq defaultInstance = new CSDecorateBagVIPFetchReq().MakeReadOnly();
  private static readonly string[] _cSDecorateBagVIPFetchReqFieldNames = new string[] { "type" };
  private static readonly uint[] _cSDecorateBagVIPFetchReqFieldTags = new uint[] { 8 };
  public static CSDecorateBagVIPFetchReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagVIPFetchReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagVIPFetchReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagVIPFetchReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagVIPFetchReq, CSDecorateBagVIPFetchReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagVIPFetchReq__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagVIPFetchReqFieldNames;
    if (hasType) {
      output.WriteUInt32(1, field_names[0], Type);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagVIPFetchReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagVIPFetchReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagVIPFetchReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagVIPFetchReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagVIPFetchReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagVIPFetchReq result;
    
    private CSDecorateBagVIPFetchReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagVIPFetchReq original = result;
        result = new CSDecorateBagVIPFetchReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagVIPFetchReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagVIPFetchReq.Descriptor; }
    }
    
    public override CSDecorateBagVIPFetchReq DefaultInstanceForType {
      get { return global::CSDecorateBagVIPFetchReq.DefaultInstance; }
    }
    
    public override CSDecorateBagVIPFetchReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagVIPFetchReq) {
        return MergeFrom((CSDecorateBagVIPFetchReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagVIPFetchReq other) {
      if (other == global::CSDecorateBagVIPFetchReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagVIPFetchReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagVIPFetchReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
  }
  static CSDecorateBagVIPFetchReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagVIPItem : pb::GeneratedMessage<CSDecorateBagVIPItem, CSDecorateBagVIPItem.Builder> {
  private CSDecorateBagVIPItem() { }
  private static readonly CSDecorateBagVIPItem defaultInstance = new CSDecorateBagVIPItem().MakeReadOnly();
  private static readonly string[] _cSDecorateBagVIPItemFieldNames = new string[] { "VipExper", "VipGrade" };
  private static readonly uint[] _cSDecorateBagVIPItemFieldTags = new uint[] { 16, 8 };
  public static CSDecorateBagVIPItem DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagVIPItem DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagVIPItem ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagVIPItem__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagVIPItem, CSDecorateBagVIPItem.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagVIPItem__FieldAccessorTable; }
  }
  
  public const int VipGradeFieldNumber = 1;
  private bool hasVipGrade;
  private uint vipGrade_;
  public bool HasVipGrade {
    get { return hasVipGrade; }
  }
  [global::System.CLSCompliant(false)]
  public uint VipGrade {
    get { return vipGrade_; }
  }
  
  public const int VipExperFieldNumber = 2;
  private bool hasVipExper;
  private uint vipExper_;
  public bool HasVipExper {
    get { return hasVipExper; }
  }
  [global::System.CLSCompliant(false)]
  public uint VipExper {
    get { return vipExper_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagVIPItemFieldNames;
    if (hasVipGrade) {
      output.WriteUInt32(1, field_names[1], VipGrade);
    }
    if (hasVipExper) {
      output.WriteUInt32(2, field_names[0], VipExper);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasVipGrade) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, VipGrade);
    }
    if (hasVipExper) {
      size += pb::CodedOutputStream.ComputeUInt32Size(2, VipExper);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagVIPItem ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagVIPItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagVIPItem MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagVIPItem prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagVIPItem, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagVIPItem cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagVIPItem result;
    
    private CSDecorateBagVIPItem PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagVIPItem original = result;
        result = new CSDecorateBagVIPItem();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagVIPItem MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagVIPItem.Descriptor; }
    }
    
    public override CSDecorateBagVIPItem DefaultInstanceForType {
      get { return global::CSDecorateBagVIPItem.DefaultInstance; }
    }
    
    public override CSDecorateBagVIPItem BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagVIPItem) {
        return MergeFrom((CSDecorateBagVIPItem) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagVIPItem other) {
      if (other == global::CSDecorateBagVIPItem.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVipGrade) {
        VipGrade = other.VipGrade;
      }
      if (other.HasVipExper) {
        VipExper = other.VipExper;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagVIPItemFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagVIPItemFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasVipGrade = input.ReadUInt32(ref result.vipGrade_);
            break;
          }
          case 16: {
            result.hasVipExper = input.ReadUInt32(ref result.vipExper_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVipGrade {
      get { return result.hasVipGrade; }
    }
    [global::System.CLSCompliant(false)]
    public uint VipGrade {
      get { return result.VipGrade; }
      set { SetVipGrade(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVipGrade(uint value) {
      PrepareBuilder();
      result.hasVipGrade = true;
      result.vipGrade_ = value;
      return this;
    }
    public Builder ClearVipGrade() {
      PrepareBuilder();
      result.hasVipGrade = false;
      result.vipGrade_ = 0;
      return this;
    }
    
    public bool HasVipExper {
      get { return result.hasVipExper; }
    }
    [global::System.CLSCompliant(false)]
    public uint VipExper {
      get { return result.VipExper; }
      set { SetVipExper(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVipExper(uint value) {
      PrepareBuilder();
      result.hasVipExper = true;
      result.vipExper_ = value;
      return this;
    }
    public Builder ClearVipExper() {
      PrepareBuilder();
      result.hasVipExper = false;
      result.vipExper_ = 0;
      return this;
    }
  }
  static CSDecorateBagVIPItem() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagVIPList : pb::GeneratedMessage<CSDecorateBagVIPList, CSDecorateBagVIPList.Builder> {
  private CSDecorateBagVIPList() { }
  private static readonly CSDecorateBagVIPList defaultInstance = new CSDecorateBagVIPList().MakeReadOnly();
  private static readonly string[] _cSDecorateBagVIPListFieldNames = new string[] { "VIPItemList" };
  private static readonly uint[] _cSDecorateBagVIPListFieldTags = new uint[] { 10 };
  public static CSDecorateBagVIPList DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagVIPList DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagVIPList ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagVIPList__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagVIPList, CSDecorateBagVIPList.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagVIPList__FieldAccessorTable; }
  }
  
  public const int VIPItemListFieldNumber = 1;
  private pbc::PopsicleList<global::CSDecorateBagVIPItem> vIPItemList_ = new pbc::PopsicleList<global::CSDecorateBagVIPItem>();
  public scg::IList<global::CSDecorateBagVIPItem> VIPItemListList {
    get { return vIPItemList_; }
  }
  public int VIPItemListCount {
    get { return vIPItemList_.Count; }
  }
  public global::CSDecorateBagVIPItem GetVIPItemList(int index) {
    return vIPItemList_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagVIPListFieldNames;
    if (vIPItemList_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], vIPItemList_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::CSDecorateBagVIPItem element in VIPItemListList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagVIPList ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagVIPList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagVIPList MakeReadOnly() {
    vIPItemList_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagVIPList prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagVIPList, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagVIPList cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagVIPList result;
    
    private CSDecorateBagVIPList PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagVIPList original = result;
        result = new CSDecorateBagVIPList();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagVIPList MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagVIPList.Descriptor; }
    }
    
    public override CSDecorateBagVIPList DefaultInstanceForType {
      get { return global::CSDecorateBagVIPList.DefaultInstance; }
    }
    
    public override CSDecorateBagVIPList BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagVIPList) {
        return MergeFrom((CSDecorateBagVIPList) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagVIPList other) {
      if (other == global::CSDecorateBagVIPList.DefaultInstance) return this;
      PrepareBuilder();
      if (other.vIPItemList_.Count != 0) {
        result.vIPItemList_.Add(other.vIPItemList_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagVIPListFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagVIPListFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.vIPItemList_, global::CSDecorateBagVIPItem.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CSDecorateBagVIPItem> VIPItemListList {
      get { return PrepareBuilder().vIPItemList_; }
    }
    public int VIPItemListCount {
      get { return result.VIPItemListCount; }
    }
    public global::CSDecorateBagVIPItem GetVIPItemList(int index) {
      return result.GetVIPItemList(index);
    }
    public Builder SetVIPItemList(int index, global::CSDecorateBagVIPItem value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.vIPItemList_[index] = value;
      return this;
    }
    public Builder SetVIPItemList(int index, global::CSDecorateBagVIPItem.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.vIPItemList_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddVIPItemList(global::CSDecorateBagVIPItem value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.vIPItemList_.Add(value);
      return this;
    }
    public Builder AddVIPItemList(global::CSDecorateBagVIPItem.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.vIPItemList_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeVIPItemList(scg::IEnumerable<global::CSDecorateBagVIPItem> values) {
      PrepareBuilder();
      result.vIPItemList_.Add(values);
      return this;
    }
    public Builder ClearVIPItemList() {
      PrepareBuilder();
      result.vIPItemList_.Clear();
      return this;
    }
  }
  static CSDecorateBagVIPList() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagVIPFetchRsp : pb::GeneratedMessage<CSDecorateBagVIPFetchRsp, CSDecorateBagVIPFetchRsp.Builder> {
  private CSDecorateBagVIPFetchRsp() { }
  private static readonly CSDecorateBagVIPFetchRsp defaultInstance = new CSDecorateBagVIPFetchRsp().MakeReadOnly();
  private static readonly string[] _cSDecorateBagVIPFetchRspFieldNames = new string[] { "DecorateBagInfo", "VipList", "id", "type" };
  private static readonly uint[] _cSDecorateBagVIPFetchRspFieldTags = new uint[] { 26, 34, 16, 8 };
  public static CSDecorateBagVIPFetchRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagVIPFetchRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagVIPFetchRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagVIPFetchRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagVIPFetchRsp, CSDecorateBagVIPFetchRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagVIPFetchRsp__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public const int IdFieldNumber = 2;
  private bool hasId;
  private uint id_;
  public bool HasId {
    get { return hasId; }
  }
  [global::System.CLSCompliant(false)]
  public uint Id {
    get { return id_; }
  }
  
  public const int DecorateBagInfoFieldNumber = 3;
  private bool hasDecorateBagInfo;
  private global::CSDecorateBagInfo decorateBagInfo_;
  public bool HasDecorateBagInfo {
    get { return hasDecorateBagInfo; }
  }
  public global::CSDecorateBagInfo DecorateBagInfo {
    get { return decorateBagInfo_ ?? global::CSDecorateBagInfo.DefaultInstance; }
  }
  
  public const int VipListFieldNumber = 4;
  private bool hasVipList;
  private global::CSDecorateBagVIPList vipList_;
  public bool HasVipList {
    get { return hasVipList; }
  }
  public global::CSDecorateBagVIPList VipList {
    get { return vipList_ ?? global::CSDecorateBagVIPList.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagVIPFetchRspFieldNames;
    if (hasType) {
      output.WriteUInt32(1, field_names[3], Type);
    }
    if (hasId) {
      output.WriteUInt32(2, field_names[2], Id);
    }
    if (hasDecorateBagInfo) {
      output.WriteMessage(3, field_names[0], DecorateBagInfo);
    }
    if (hasVipList) {
      output.WriteMessage(4, field_names[1], VipList);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
    }
    if (hasId) {
      size += pb::CodedOutputStream.ComputeUInt32Size(2, Id);
    }
    if (hasDecorateBagInfo) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, DecorateBagInfo);
    }
    if (hasVipList) {
      size += pb::CodedOutputStream.ComputeMessageSize(4, VipList);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagVIPFetchRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagVIPFetchRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagVIPFetchRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagVIPFetchRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagVIPFetchRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagVIPFetchRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagVIPFetchRsp result;
    
    private CSDecorateBagVIPFetchRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagVIPFetchRsp original = result;
        result = new CSDecorateBagVIPFetchRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagVIPFetchRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagVIPFetchRsp.Descriptor; }
    }
    
    public override CSDecorateBagVIPFetchRsp DefaultInstanceForType {
      get { return global::CSDecorateBagVIPFetchRsp.DefaultInstance; }
    }
    
    public override CSDecorateBagVIPFetchRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagVIPFetchRsp) {
        return MergeFrom((CSDecorateBagVIPFetchRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagVIPFetchRsp other) {
      if (other == global::CSDecorateBagVIPFetchRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasDecorateBagInfo) {
        MergeDecorateBagInfo(other.DecorateBagInfo);
      }
      if (other.HasVipList) {
        MergeVipList(other.VipList);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagVIPFetchRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagVIPFetchRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
          case 16: {
            result.hasId = input.ReadUInt32(ref result.id_);
            break;
          }
          case 26: {
            global::CSDecorateBagInfo.Builder subBuilder = global::CSDecorateBagInfo.CreateBuilder();
            if (result.hasDecorateBagInfo) {
              subBuilder.MergeFrom(DecorateBagInfo);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            DecorateBagInfo = subBuilder.BuildPartial();
            break;
          }
          case 34: {
            global::CSDecorateBagVIPList.Builder subBuilder = global::CSDecorateBagVIPList.CreateBuilder();
            if (result.hasVipList) {
              subBuilder.MergeFrom(VipList);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            VipList = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
    
    public bool HasId {
      get { return result.hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetId(uint value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
    
    public bool HasDecorateBagInfo {
     get { return result.hasDecorateBagInfo; }
    }
    public global::CSDecorateBagInfo DecorateBagInfo {
      get { return result.DecorateBagInfo; }
      set { SetDecorateBagInfo(value); }
    }
    public Builder SetDecorateBagInfo(global::CSDecorateBagInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDecorateBagInfo = true;
      result.decorateBagInfo_ = value;
      return this;
    }
    public Builder SetDecorateBagInfo(global::CSDecorateBagInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasDecorateBagInfo = true;
      result.decorateBagInfo_ = builderForValue.Build();
      return this;
    }
    public Builder MergeDecorateBagInfo(global::CSDecorateBagInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasDecorateBagInfo &&
          result.decorateBagInfo_ != global::CSDecorateBagInfo.DefaultInstance) {
          result.decorateBagInfo_ = global::CSDecorateBagInfo.CreateBuilder(result.decorateBagInfo_).MergeFrom(value).BuildPartial();
      } else {
        result.decorateBagInfo_ = value;
      }
      result.hasDecorateBagInfo = true;
      return this;
    }
    public Builder ClearDecorateBagInfo() {
      PrepareBuilder();
      result.hasDecorateBagInfo = false;
      result.decorateBagInfo_ = null;
      return this;
    }
    
    public bool HasVipList {
     get { return result.hasVipList; }
    }
    public global::CSDecorateBagVIPList VipList {
      get { return result.VipList; }
      set { SetVipList(value); }
    }
    public Builder SetVipList(global::CSDecorateBagVIPList value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasVipList = true;
      result.vipList_ = value;
      return this;
    }
    public Builder SetVipList(global::CSDecorateBagVIPList.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasVipList = true;
      result.vipList_ = builderForValue.Build();
      return this;
    }
    public Builder MergeVipList(global::CSDecorateBagVIPList value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasVipList &&
          result.vipList_ != global::CSDecorateBagVIPList.DefaultInstance) {
          result.vipList_ = global::CSDecorateBagVIPList.CreateBuilder(result.vipList_).MergeFrom(value).BuildPartial();
      } else {
        result.vipList_ = value;
      }
      result.hasVipList = true;
      return this;
    }
    public Builder ClearVipList() {
      PrepareBuilder();
      result.hasVipList = false;
      result.vipList_ = null;
      return this;
    }
  }
  static CSDecorateBagVIPFetchRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagReqParam : pb::GeneratedMessage<CSDecorateBagReqParam, CSDecorateBagReqParam.Builder> {
  private CSDecorateBagReqParam() { }
  private static readonly CSDecorateBagReqParam defaultInstance = new CSDecorateBagReqParam().MakeReadOnly();
  private static readonly string[] _cSDecorateBagReqParamFieldNames = new string[] { "FetchReq", "ShowSetReq", "VIPFetchReq" };
  private static readonly uint[] _cSDecorateBagReqParamFieldTags = new uint[] { 10, 18, 26 };
  public static CSDecorateBagReqParam DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagReqParam DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagReqParam ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagReqParam__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagReqParam, CSDecorateBagReqParam.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagReqParam__FieldAccessorTable; }
  }
  
  public const int FetchReqFieldNumber = 1;
  private bool hasFetchReq;
  private global::CSDecorateBagFetchReq fetchReq_;
  public bool HasFetchReq {
    get { return hasFetchReq; }
  }
  public global::CSDecorateBagFetchReq FetchReq {
    get { return fetchReq_ ?? global::CSDecorateBagFetchReq.DefaultInstance; }
  }
  
  public const int ShowSetReqFieldNumber = 2;
  private bool hasShowSetReq;
  private global::CSDecorateBagShowSetReq showSetReq_;
  public bool HasShowSetReq {
    get { return hasShowSetReq; }
  }
  public global::CSDecorateBagShowSetReq ShowSetReq {
    get { return showSetReq_ ?? global::CSDecorateBagShowSetReq.DefaultInstance; }
  }
  
  public const int VIPFetchReqFieldNumber = 3;
  private bool hasVIPFetchReq;
  private global::CSDecorateBagVIPFetchReq vIPFetchReq_;
  public bool HasVIPFetchReq {
    get { return hasVIPFetchReq; }
  }
  public global::CSDecorateBagVIPFetchReq VIPFetchReq {
    get { return vIPFetchReq_ ?? global::CSDecorateBagVIPFetchReq.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagReqParamFieldNames;
    if (hasFetchReq) {
      output.WriteMessage(1, field_names[0], FetchReq);
    }
    if (hasShowSetReq) {
      output.WriteMessage(2, field_names[1], ShowSetReq);
    }
    if (hasVIPFetchReq) {
      output.WriteMessage(3, field_names[2], VIPFetchReq);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFetchReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, FetchReq);
    }
    if (hasShowSetReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, ShowSetReq);
    }
    if (hasVIPFetchReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, VIPFetchReq);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagReqParam ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagReqParam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagReqParam MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagReqParam prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagReqParam, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagReqParam cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagReqParam result;
    
    private CSDecorateBagReqParam PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagReqParam original = result;
        result = new CSDecorateBagReqParam();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagReqParam MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagReqParam.Descriptor; }
    }
    
    public override CSDecorateBagReqParam DefaultInstanceForType {
      get { return global::CSDecorateBagReqParam.DefaultInstance; }
    }
    
    public override CSDecorateBagReqParam BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagReqParam) {
        return MergeFrom((CSDecorateBagReqParam) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagReqParam other) {
      if (other == global::CSDecorateBagReqParam.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFetchReq) {
        MergeFetchReq(other.FetchReq);
      }
      if (other.HasShowSetReq) {
        MergeShowSetReq(other.ShowSetReq);
      }
      if (other.HasVIPFetchReq) {
        MergeVIPFetchReq(other.VIPFetchReq);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagReqParamFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagReqParamFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSDecorateBagFetchReq.Builder subBuilder = global::CSDecorateBagFetchReq.CreateBuilder();
            if (result.hasFetchReq) {
              subBuilder.MergeFrom(FetchReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            FetchReq = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::CSDecorateBagShowSetReq.Builder subBuilder = global::CSDecorateBagShowSetReq.CreateBuilder();
            if (result.hasShowSetReq) {
              subBuilder.MergeFrom(ShowSetReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ShowSetReq = subBuilder.BuildPartial();
            break;
          }
          case 26: {
            global::CSDecorateBagVIPFetchReq.Builder subBuilder = global::CSDecorateBagVIPFetchReq.CreateBuilder();
            if (result.hasVIPFetchReq) {
              subBuilder.MergeFrom(VIPFetchReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            VIPFetchReq = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFetchReq {
     get { return result.hasFetchReq; }
    }
    public global::CSDecorateBagFetchReq FetchReq {
      get { return result.FetchReq; }
      set { SetFetchReq(value); }
    }
    public Builder SetFetchReq(global::CSDecorateBagFetchReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasFetchReq = true;
      result.fetchReq_ = value;
      return this;
    }
    public Builder SetFetchReq(global::CSDecorateBagFetchReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasFetchReq = true;
      result.fetchReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeFetchReq(global::CSDecorateBagFetchReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasFetchReq &&
          result.fetchReq_ != global::CSDecorateBagFetchReq.DefaultInstance) {
          result.fetchReq_ = global::CSDecorateBagFetchReq.CreateBuilder(result.fetchReq_).MergeFrom(value).BuildPartial();
      } else {
        result.fetchReq_ = value;
      }
      result.hasFetchReq = true;
      return this;
    }
    public Builder ClearFetchReq() {
      PrepareBuilder();
      result.hasFetchReq = false;
      result.fetchReq_ = null;
      return this;
    }
    
    public bool HasShowSetReq {
     get { return result.hasShowSetReq; }
    }
    public global::CSDecorateBagShowSetReq ShowSetReq {
      get { return result.ShowSetReq; }
      set { SetShowSetReq(value); }
    }
    public Builder SetShowSetReq(global::CSDecorateBagShowSetReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasShowSetReq = true;
      result.showSetReq_ = value;
      return this;
    }
    public Builder SetShowSetReq(global::CSDecorateBagShowSetReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasShowSetReq = true;
      result.showSetReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeShowSetReq(global::CSDecorateBagShowSetReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasShowSetReq &&
          result.showSetReq_ != global::CSDecorateBagShowSetReq.DefaultInstance) {
          result.showSetReq_ = global::CSDecorateBagShowSetReq.CreateBuilder(result.showSetReq_).MergeFrom(value).BuildPartial();
      } else {
        result.showSetReq_ = value;
      }
      result.hasShowSetReq = true;
      return this;
    }
    public Builder ClearShowSetReq() {
      PrepareBuilder();
      result.hasShowSetReq = false;
      result.showSetReq_ = null;
      return this;
    }
    
    public bool HasVIPFetchReq {
     get { return result.hasVIPFetchReq; }
    }
    public global::CSDecorateBagVIPFetchReq VIPFetchReq {
      get { return result.VIPFetchReq; }
      set { SetVIPFetchReq(value); }
    }
    public Builder SetVIPFetchReq(global::CSDecorateBagVIPFetchReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasVIPFetchReq = true;
      result.vIPFetchReq_ = value;
      return this;
    }
    public Builder SetVIPFetchReq(global::CSDecorateBagVIPFetchReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasVIPFetchReq = true;
      result.vIPFetchReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeVIPFetchReq(global::CSDecorateBagVIPFetchReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasVIPFetchReq &&
          result.vIPFetchReq_ != global::CSDecorateBagVIPFetchReq.DefaultInstance) {
          result.vIPFetchReq_ = global::CSDecorateBagVIPFetchReq.CreateBuilder(result.vIPFetchReq_).MergeFrom(value).BuildPartial();
      } else {
        result.vIPFetchReq_ = value;
      }
      result.hasVIPFetchReq = true;
      return this;
    }
    public Builder ClearVIPFetchReq() {
      PrepareBuilder();
      result.hasVIPFetchReq = false;
      result.vIPFetchReq_ = null;
      return this;
    }
  }
  static CSDecorateBagReqParam() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagRspParam : pb::GeneratedMessage<CSDecorateBagRspParam, CSDecorateBagRspParam.Builder> {
  private CSDecorateBagRspParam() { }
  private static readonly CSDecorateBagRspParam defaultInstance = new CSDecorateBagRspParam().MakeReadOnly();
  private static readonly string[] _cSDecorateBagRspParamFieldNames = new string[] { "FetchRsp", "VIPFetchRsp" };
  private static readonly uint[] _cSDecorateBagRspParamFieldTags = new uint[] { 10, 18 };
  public static CSDecorateBagRspParam DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagRspParam DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagRspParam ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagRspParam__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagRspParam, CSDecorateBagRspParam.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagRspParam__FieldAccessorTable; }
  }
  
  public const int FetchRspFieldNumber = 1;
  private bool hasFetchRsp;
  private global::CSDecorateBagFetchRsp fetchRsp_;
  public bool HasFetchRsp {
    get { return hasFetchRsp; }
  }
  public global::CSDecorateBagFetchRsp FetchRsp {
    get { return fetchRsp_ ?? global::CSDecorateBagFetchRsp.DefaultInstance; }
  }
  
  public const int VIPFetchRspFieldNumber = 2;
  private bool hasVIPFetchRsp;
  private global::CSDecorateBagVIPFetchRsp vIPFetchRsp_;
  public bool HasVIPFetchRsp {
    get { return hasVIPFetchRsp; }
  }
  public global::CSDecorateBagVIPFetchRsp VIPFetchRsp {
    get { return vIPFetchRsp_ ?? global::CSDecorateBagVIPFetchRsp.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagRspParamFieldNames;
    if (hasFetchRsp) {
      output.WriteMessage(1, field_names[0], FetchRsp);
    }
    if (hasVIPFetchRsp) {
      output.WriteMessage(2, field_names[1], VIPFetchRsp);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFetchRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, FetchRsp);
    }
    if (hasVIPFetchRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, VIPFetchRsp);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagRspParam ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagRspParam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagRspParam MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagRspParam prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagRspParam, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagRspParam cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagRspParam result;
    
    private CSDecorateBagRspParam PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagRspParam original = result;
        result = new CSDecorateBagRspParam();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagRspParam MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagRspParam.Descriptor; }
    }
    
    public override CSDecorateBagRspParam DefaultInstanceForType {
      get { return global::CSDecorateBagRspParam.DefaultInstance; }
    }
    
    public override CSDecorateBagRspParam BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagRspParam) {
        return MergeFrom((CSDecorateBagRspParam) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagRspParam other) {
      if (other == global::CSDecorateBagRspParam.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFetchRsp) {
        MergeFetchRsp(other.FetchRsp);
      }
      if (other.HasVIPFetchRsp) {
        MergeVIPFetchRsp(other.VIPFetchRsp);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagRspParamFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagRspParamFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSDecorateBagFetchRsp.Builder subBuilder = global::CSDecorateBagFetchRsp.CreateBuilder();
            if (result.hasFetchRsp) {
              subBuilder.MergeFrom(FetchRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            FetchRsp = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::CSDecorateBagVIPFetchRsp.Builder subBuilder = global::CSDecorateBagVIPFetchRsp.CreateBuilder();
            if (result.hasVIPFetchRsp) {
              subBuilder.MergeFrom(VIPFetchRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            VIPFetchRsp = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFetchRsp {
     get { return result.hasFetchRsp; }
    }
    public global::CSDecorateBagFetchRsp FetchRsp {
      get { return result.FetchRsp; }
      set { SetFetchRsp(value); }
    }
    public Builder SetFetchRsp(global::CSDecorateBagFetchRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasFetchRsp = true;
      result.fetchRsp_ = value;
      return this;
    }
    public Builder SetFetchRsp(global::CSDecorateBagFetchRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasFetchRsp = true;
      result.fetchRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeFetchRsp(global::CSDecorateBagFetchRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasFetchRsp &&
          result.fetchRsp_ != global::CSDecorateBagFetchRsp.DefaultInstance) {
          result.fetchRsp_ = global::CSDecorateBagFetchRsp.CreateBuilder(result.fetchRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.fetchRsp_ = value;
      }
      result.hasFetchRsp = true;
      return this;
    }
    public Builder ClearFetchRsp() {
      PrepareBuilder();
      result.hasFetchRsp = false;
      result.fetchRsp_ = null;
      return this;
    }
    
    public bool HasVIPFetchRsp {
     get { return result.hasVIPFetchRsp; }
    }
    public global::CSDecorateBagVIPFetchRsp VIPFetchRsp {
      get { return result.VIPFetchRsp; }
      set { SetVIPFetchRsp(value); }
    }
    public Builder SetVIPFetchRsp(global::CSDecorateBagVIPFetchRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasVIPFetchRsp = true;
      result.vIPFetchRsp_ = value;
      return this;
    }
    public Builder SetVIPFetchRsp(global::CSDecorateBagVIPFetchRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasVIPFetchRsp = true;
      result.vIPFetchRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeVIPFetchRsp(global::CSDecorateBagVIPFetchRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasVIPFetchRsp &&
          result.vIPFetchRsp_ != global::CSDecorateBagVIPFetchRsp.DefaultInstance) {
          result.vIPFetchRsp_ = global::CSDecorateBagVIPFetchRsp.CreateBuilder(result.vIPFetchRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.vIPFetchRsp_ = value;
      }
      result.hasVIPFetchRsp = true;
      return this;
    }
    public Builder ClearVIPFetchRsp() {
      PrepareBuilder();
      result.hasVIPFetchRsp = false;
      result.vIPFetchRsp_ = null;
      return this;
    }
  }
  static CSDecorateBagRspParam() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagReq : pb::GeneratedMessage<CSDecorateBagReq, CSDecorateBagReq.Builder> {
  private CSDecorateBagReq() { }
  private static readonly CSDecorateBagReq defaultInstance = new CSDecorateBagReq().MakeReadOnly();
  private static readonly string[] _cSDecorateBagReqFieldNames = new string[] { "cmd", "reqParam" };
  private static readonly uint[] _cSDecorateBagReqFieldTags = new uint[] { 8, 18 };
  public static CSDecorateBagReq DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagReq DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagReq ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagReq__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagReq, CSDecorateBagReq.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagReq__FieldAccessorTable; }
  }
  
  public const int CmdFieldNumber = 1;
  private bool hasCmd;
  private global::CSDecorateBagCmd cmd_ = global::CSDecorateBagCmd.CSDecorateBagCmd_Fetch;
  public bool HasCmd {
    get { return hasCmd; }
  }
  public global::CSDecorateBagCmd Cmd {
    get { return cmd_; }
  }
  
  public const int ReqParamFieldNumber = 2;
  private bool hasReqParam;
  private global::CSDecorateBagReqParam reqParam_;
  public bool HasReqParam {
    get { return hasReqParam; }
  }
  public global::CSDecorateBagReqParam ReqParam {
    get { return reqParam_ ?? global::CSDecorateBagReqParam.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCmd) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagReqFieldNames;
    if (hasCmd) {
      output.WriteEnum(1, field_names[0], (int) Cmd, Cmd);
    }
    if (hasReqParam) {
      output.WriteMessage(2, field_names[1], ReqParam);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCmd) {
      size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Cmd);
    }
    if (hasReqParam) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, ReqParam);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagReq ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagReq ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagReq ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagReq ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagReq ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagReq MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagReq prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagReq, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagReq cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagReq result;
    
    private CSDecorateBagReq PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagReq original = result;
        result = new CSDecorateBagReq();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagReq MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagReq.Descriptor; }
    }
    
    public override CSDecorateBagReq DefaultInstanceForType {
      get { return global::CSDecorateBagReq.DefaultInstance; }
    }
    
    public override CSDecorateBagReq BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagReq) {
        return MergeFrom((CSDecorateBagReq) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagReq other) {
      if (other == global::CSDecorateBagReq.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCmd) {
        Cmd = other.Cmd;
      }
      if (other.HasReqParam) {
        MergeReqParam(other.ReqParam);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.cmd_, out unknown)) {
              result.hasCmd = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 18: {
            global::CSDecorateBagReqParam.Builder subBuilder = global::CSDecorateBagReqParam.CreateBuilder();
            if (result.hasReqParam) {
              subBuilder.MergeFrom(ReqParam);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ReqParam = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCmd {
     get { return result.hasCmd; }
    }
    public global::CSDecorateBagCmd Cmd {
      get { return result.Cmd; }
      set { SetCmd(value); }
    }
    public Builder SetCmd(global::CSDecorateBagCmd value) {
      PrepareBuilder();
      result.hasCmd = true;
      result.cmd_ = value;
      return this;
    }
    public Builder ClearCmd() {
      PrepareBuilder();
      result.hasCmd = false;
      result.cmd_ = global::CSDecorateBagCmd.CSDecorateBagCmd_Fetch;
      return this;
    }
    
    public bool HasReqParam {
     get { return result.hasReqParam; }
    }
    public global::CSDecorateBagReqParam ReqParam {
      get { return result.ReqParam; }
      set { SetReqParam(value); }
    }
    public Builder SetReqParam(global::CSDecorateBagReqParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasReqParam = true;
      result.reqParam_ = value;
      return this;
    }
    public Builder SetReqParam(global::CSDecorateBagReqParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasReqParam = true;
      result.reqParam_ = builderForValue.Build();
      return this;
    }
    public Builder MergeReqParam(global::CSDecorateBagReqParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasReqParam &&
          result.reqParam_ != global::CSDecorateBagReqParam.DefaultInstance) {
          result.reqParam_ = global::CSDecorateBagReqParam.CreateBuilder(result.reqParam_).MergeFrom(value).BuildPartial();
      } else {
        result.reqParam_ = value;
      }
      result.hasReqParam = true;
      return this;
    }
    public Builder ClearReqParam() {
      PrepareBuilder();
      result.hasReqParam = false;
      result.reqParam_ = null;
      return this;
    }
  }
  static CSDecorateBagReq() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSDecorateBagRsp : pb::GeneratedMessage<CSDecorateBagRsp, CSDecorateBagRsp.Builder> {
  private CSDecorateBagRsp() { }
  private static readonly CSDecorateBagRsp defaultInstance = new CSDecorateBagRsp().MakeReadOnly();
  private static readonly string[] _cSDecorateBagRspFieldNames = new string[] { "cmd", "result", "rspParam" };
  private static readonly uint[] _cSDecorateBagRspFieldTags = new uint[] { 16, 8, 26 };
  public static CSDecorateBagRsp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSDecorateBagRsp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSDecorateBagRsp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSDecorateBagRsp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSDecorateBagRsp, CSDecorateBagRsp.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSDecorateBagRsp__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private int result_;
  public bool HasResult {
    get { return hasResult; }
  }
  public int Result {
    get { return result_; }
  }
  
  public const int CmdFieldNumber = 2;
  private bool hasCmd;
  private global::CSDecorateBagCmd cmd_ = global::CSDecorateBagCmd.CSDecorateBagCmd_Fetch;
  public bool HasCmd {
    get { return hasCmd; }
  }
  public global::CSDecorateBagCmd Cmd {
    get { return cmd_; }
  }
  
  public const int RspParamFieldNumber = 3;
  private bool hasRspParam;
  private global::CSDecorateBagRspParam rspParam_;
  public bool HasRspParam {
    get { return hasRspParam; }
  }
  public global::CSDecorateBagRspParam RspParam {
    get { return rspParam_ ?? global::CSDecorateBagRspParam.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCmd) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSDecorateBagRspFieldNames;
    if (hasResult) {
      output.WriteInt32(1, field_names[1], Result);
    }
    if (hasCmd) {
      output.WriteEnum(2, field_names[0], (int) Cmd, Cmd);
    }
    if (hasRspParam) {
      output.WriteMessage(3, field_names[2], RspParam);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasResult) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Result);
    }
    if (hasCmd) {
      size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Cmd);
    }
    if (hasRspParam) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, RspParam);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSDecorateBagRsp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagRsp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSDecorateBagRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagRsp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSDecorateBagRsp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSDecorateBagRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSDecorateBagRsp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSDecorateBagRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSDecorateBagRsp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSDecorateBagRsp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSDecorateBagRsp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSDecorateBagRsp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSDecorateBagRsp result;
    
    private CSDecorateBagRsp PrepareBuilder() {
      if (resultIsReadOnly) {
        CSDecorateBagRsp original = result;
        result = new CSDecorateBagRsp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSDecorateBagRsp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSDecorateBagRsp.Descriptor; }
    }
    
    public override CSDecorateBagRsp DefaultInstanceForType {
      get { return global::CSDecorateBagRsp.DefaultInstance; }
    }
    
    public override CSDecorateBagRsp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSDecorateBagRsp) {
        return MergeFrom((CSDecorateBagRsp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSDecorateBagRsp other) {
      if (other == global::CSDecorateBagRsp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasCmd) {
        Cmd = other.Cmd;
      }
      if (other.HasRspParam) {
        MergeRspParam(other.RspParam);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSDecorateBagRspFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSDecorateBagRspFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadInt32(ref result.result_);
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.cmd_, out unknown)) {
              result.hasCmd = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
          case 26: {
            global::CSDecorateBagRspParam.Builder subBuilder = global::CSDecorateBagRspParam.CreateBuilder();
            if (result.hasRspParam) {
              subBuilder.MergeFrom(RspParam);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            RspParam = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    public int Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    public Builder SetResult(int value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
    
    public bool HasCmd {
     get { return result.hasCmd; }
    }
    public global::CSDecorateBagCmd Cmd {
      get { return result.Cmd; }
      set { SetCmd(value); }
    }
    public Builder SetCmd(global::CSDecorateBagCmd value) {
      PrepareBuilder();
      result.hasCmd = true;
      result.cmd_ = value;
      return this;
    }
    public Builder ClearCmd() {
      PrepareBuilder();
      result.hasCmd = false;
      result.cmd_ = global::CSDecorateBagCmd.CSDecorateBagCmd_Fetch;
      return this;
    }
    
    public bool HasRspParam {
     get { return result.hasRspParam; }
    }
    public global::CSDecorateBagRspParam RspParam {
      get { return result.RspParam; }
      set { SetRspParam(value); }
    }
    public Builder SetRspParam(global::CSDecorateBagRspParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRspParam = true;
      result.rspParam_ = value;
      return this;
    }
    public Builder SetRspParam(global::CSDecorateBagRspParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRspParam = true;
      result.rspParam_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRspParam(global::CSDecorateBagRspParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRspParam &&
          result.rspParam_ != global::CSDecorateBagRspParam.DefaultInstance) {
          result.rspParam_ = global::CSDecorateBagRspParam.CreateBuilder(result.rspParam_).MergeFrom(value).BuildPartial();
      } else {
        result.rspParam_ = value;
      }
      result.hasRspParam = true;
      return this;
    }
    public Builder ClearRspParam() {
      PrepareBuilder();
      result.hasRspParam = false;
      result.rspParam_ = null;
      return this;
    }
  }
  static CSDecorateBagRsp() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSMsgBody : pb::GeneratedMessage<CSMsgBody, CSMsgBody.Builder> {
  private CSMsgBody() { }
  private static readonly CSMsgBody defaultInstance = new CSMsgBody().MakeReadOnly();
  private static readonly string[] _cSMsgBodyFieldNames = new string[] { "BagReq", "BagRsp", "DecorateBagReq", "DecorateBagRsp", "RegisterLoginReq", "RegisterLoginRsp" };
  private static readonly uint[] _cSMsgBodyFieldTags = new uint[] { 26, 34, 42, 50, 10, 18 };
  public static CSMsgBody DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSMsgBody DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSMsgBody ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSMsgBody__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSMsgBody, CSMsgBody.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSMsgBody__FieldAccessorTable; }
  }
  
  public const int RegisterLoginReqFieldNumber = 1;
  private bool hasRegisterLoginReq;
  private global::CSRegisterLoginReq registerLoginReq_;
  public bool HasRegisterLoginReq {
    get { return hasRegisterLoginReq; }
  }
  public global::CSRegisterLoginReq RegisterLoginReq {
    get { return registerLoginReq_ ?? global::CSRegisterLoginReq.DefaultInstance; }
  }
  
  public const int RegisterLoginRspFieldNumber = 2;
  private bool hasRegisterLoginRsp;
  private global::CSRegisterLoginRsp registerLoginRsp_;
  public bool HasRegisterLoginRsp {
    get { return hasRegisterLoginRsp; }
  }
  public global::CSRegisterLoginRsp RegisterLoginRsp {
    get { return registerLoginRsp_ ?? global::CSRegisterLoginRsp.DefaultInstance; }
  }
  
  public const int BagReqFieldNumber = 3;
  private bool hasBagReq;
  private global::CSBagReq bagReq_;
  public bool HasBagReq {
    get { return hasBagReq; }
  }
  public global::CSBagReq BagReq {
    get { return bagReq_ ?? global::CSBagReq.DefaultInstance; }
  }
  
  public const int BagRspFieldNumber = 4;
  private bool hasBagRsp;
  private global::CSBagRsp bagRsp_;
  public bool HasBagRsp {
    get { return hasBagRsp; }
  }
  public global::CSBagRsp BagRsp {
    get { return bagRsp_ ?? global::CSBagRsp.DefaultInstance; }
  }
  
  public const int DecorateBagReqFieldNumber = 5;
  private bool hasDecorateBagReq;
  private global::CSDecorateBagReq decorateBagReq_;
  public bool HasDecorateBagReq {
    get { return hasDecorateBagReq; }
  }
  public global::CSDecorateBagReq DecorateBagReq {
    get { return decorateBagReq_ ?? global::CSDecorateBagReq.DefaultInstance; }
  }
  
  public const int DecorateBagRspFieldNumber = 6;
  private bool hasDecorateBagRsp;
  private global::CSDecorateBagRsp decorateBagRsp_;
  public bool HasDecorateBagRsp {
    get { return hasDecorateBagRsp; }
  }
  public global::CSDecorateBagRsp DecorateBagRsp {
    get { return decorateBagRsp_ ?? global::CSDecorateBagRsp.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (HasRegisterLoginReq) {
        if (!RegisterLoginReq.IsInitialized) return false;
      }
      if (HasRegisterLoginRsp) {
        if (!RegisterLoginRsp.IsInitialized) return false;
      }
      if (HasBagReq) {
        if (!BagReq.IsInitialized) return false;
      }
      if (HasBagRsp) {
        if (!BagRsp.IsInitialized) return false;
      }
      if (HasDecorateBagReq) {
        if (!DecorateBagReq.IsInitialized) return false;
      }
      if (HasDecorateBagRsp) {
        if (!DecorateBagRsp.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSMsgBodyFieldNames;
    if (hasRegisterLoginReq) {
      output.WriteMessage(1, field_names[4], RegisterLoginReq);
    }
    if (hasRegisterLoginRsp) {
      output.WriteMessage(2, field_names[5], RegisterLoginRsp);
    }
    if (hasBagReq) {
      output.WriteMessage(3, field_names[0], BagReq);
    }
    if (hasBagRsp) {
      output.WriteMessage(4, field_names[1], BagRsp);
    }
    if (hasDecorateBagReq) {
      output.WriteMessage(5, field_names[2], DecorateBagReq);
    }
    if (hasDecorateBagRsp) {
      output.WriteMessage(6, field_names[3], DecorateBagRsp);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasRegisterLoginReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, RegisterLoginReq);
    }
    if (hasRegisterLoginRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, RegisterLoginRsp);
    }
    if (hasBagReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, BagReq);
    }
    if (hasBagRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(4, BagRsp);
    }
    if (hasDecorateBagReq) {
      size += pb::CodedOutputStream.ComputeMessageSize(5, DecorateBagReq);
    }
    if (hasDecorateBagRsp) {
      size += pb::CodedOutputStream.ComputeMessageSize(6, DecorateBagRsp);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSMsgBody ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSMsgBody ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSMsgBody ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSMsgBody ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSMsgBody ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSMsgBody ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSMsgBody ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSMsgBody ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSMsgBody ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSMsgBody ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSMsgBody MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSMsgBody prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSMsgBody, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSMsgBody cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSMsgBody result;
    
    private CSMsgBody PrepareBuilder() {
      if (resultIsReadOnly) {
        CSMsgBody original = result;
        result = new CSMsgBody();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSMsgBody MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSMsgBody.Descriptor; }
    }
    
    public override CSMsgBody DefaultInstanceForType {
      get { return global::CSMsgBody.DefaultInstance; }
    }
    
    public override CSMsgBody BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSMsgBody) {
        return MergeFrom((CSMsgBody) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSMsgBody other) {
      if (other == global::CSMsgBody.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasRegisterLoginReq) {
        MergeRegisterLoginReq(other.RegisterLoginReq);
      }
      if (other.HasRegisterLoginRsp) {
        MergeRegisterLoginRsp(other.RegisterLoginRsp);
      }
      if (other.HasBagReq) {
        MergeBagReq(other.BagReq);
      }
      if (other.HasBagRsp) {
        MergeBagRsp(other.BagRsp);
      }
      if (other.HasDecorateBagReq) {
        MergeDecorateBagReq(other.DecorateBagReq);
      }
      if (other.HasDecorateBagRsp) {
        MergeDecorateBagRsp(other.DecorateBagRsp);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSMsgBodyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSMsgBodyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSRegisterLoginReq.Builder subBuilder = global::CSRegisterLoginReq.CreateBuilder();
            if (result.hasRegisterLoginReq) {
              subBuilder.MergeFrom(RegisterLoginReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            RegisterLoginReq = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::CSRegisterLoginRsp.Builder subBuilder = global::CSRegisterLoginRsp.CreateBuilder();
            if (result.hasRegisterLoginRsp) {
              subBuilder.MergeFrom(RegisterLoginRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            RegisterLoginRsp = subBuilder.BuildPartial();
            break;
          }
          case 26: {
            global::CSBagReq.Builder subBuilder = global::CSBagReq.CreateBuilder();
            if (result.hasBagReq) {
              subBuilder.MergeFrom(BagReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            BagReq = subBuilder.BuildPartial();
            break;
          }
          case 34: {
            global::CSBagRsp.Builder subBuilder = global::CSBagRsp.CreateBuilder();
            if (result.hasBagRsp) {
              subBuilder.MergeFrom(BagRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            BagRsp = subBuilder.BuildPartial();
            break;
          }
          case 42: {
            global::CSDecorateBagReq.Builder subBuilder = global::CSDecorateBagReq.CreateBuilder();
            if (result.hasDecorateBagReq) {
              subBuilder.MergeFrom(DecorateBagReq);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            DecorateBagReq = subBuilder.BuildPartial();
            break;
          }
          case 50: {
            global::CSDecorateBagRsp.Builder subBuilder = global::CSDecorateBagRsp.CreateBuilder();
            if (result.hasDecorateBagRsp) {
              subBuilder.MergeFrom(DecorateBagRsp);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            DecorateBagRsp = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasRegisterLoginReq {
     get { return result.hasRegisterLoginReq; }
    }
    public global::CSRegisterLoginReq RegisterLoginReq {
      get { return result.RegisterLoginReq; }
      set { SetRegisterLoginReq(value); }
    }
    public Builder SetRegisterLoginReq(global::CSRegisterLoginReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRegisterLoginReq = true;
      result.registerLoginReq_ = value;
      return this;
    }
    public Builder SetRegisterLoginReq(global::CSRegisterLoginReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRegisterLoginReq = true;
      result.registerLoginReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRegisterLoginReq(global::CSRegisterLoginReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRegisterLoginReq &&
          result.registerLoginReq_ != global::CSRegisterLoginReq.DefaultInstance) {
          result.registerLoginReq_ = global::CSRegisterLoginReq.CreateBuilder(result.registerLoginReq_).MergeFrom(value).BuildPartial();
      } else {
        result.registerLoginReq_ = value;
      }
      result.hasRegisterLoginReq = true;
      return this;
    }
    public Builder ClearRegisterLoginReq() {
      PrepareBuilder();
      result.hasRegisterLoginReq = false;
      result.registerLoginReq_ = null;
      return this;
    }
    
    public bool HasRegisterLoginRsp {
     get { return result.hasRegisterLoginRsp; }
    }
    public global::CSRegisterLoginRsp RegisterLoginRsp {
      get { return result.RegisterLoginRsp; }
      set { SetRegisterLoginRsp(value); }
    }
    public Builder SetRegisterLoginRsp(global::CSRegisterLoginRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRegisterLoginRsp = true;
      result.registerLoginRsp_ = value;
      return this;
    }
    public Builder SetRegisterLoginRsp(global::CSRegisterLoginRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRegisterLoginRsp = true;
      result.registerLoginRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRegisterLoginRsp(global::CSRegisterLoginRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRegisterLoginRsp &&
          result.registerLoginRsp_ != global::CSRegisterLoginRsp.DefaultInstance) {
          result.registerLoginRsp_ = global::CSRegisterLoginRsp.CreateBuilder(result.registerLoginRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.registerLoginRsp_ = value;
      }
      result.hasRegisterLoginRsp = true;
      return this;
    }
    public Builder ClearRegisterLoginRsp() {
      PrepareBuilder();
      result.hasRegisterLoginRsp = false;
      result.registerLoginRsp_ = null;
      return this;
    }
    
    public bool HasBagReq {
     get { return result.hasBagReq; }
    }
    public global::CSBagReq BagReq {
      get { return result.BagReq; }
      set { SetBagReq(value); }
    }
    public Builder SetBagReq(global::CSBagReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBagReq = true;
      result.bagReq_ = value;
      return this;
    }
    public Builder SetBagReq(global::CSBagReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasBagReq = true;
      result.bagReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeBagReq(global::CSBagReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasBagReq &&
          result.bagReq_ != global::CSBagReq.DefaultInstance) {
          result.bagReq_ = global::CSBagReq.CreateBuilder(result.bagReq_).MergeFrom(value).BuildPartial();
      } else {
        result.bagReq_ = value;
      }
      result.hasBagReq = true;
      return this;
    }
    public Builder ClearBagReq() {
      PrepareBuilder();
      result.hasBagReq = false;
      result.bagReq_ = null;
      return this;
    }
    
    public bool HasBagRsp {
     get { return result.hasBagRsp; }
    }
    public global::CSBagRsp BagRsp {
      get { return result.BagRsp; }
      set { SetBagRsp(value); }
    }
    public Builder SetBagRsp(global::CSBagRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBagRsp = true;
      result.bagRsp_ = value;
      return this;
    }
    public Builder SetBagRsp(global::CSBagRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasBagRsp = true;
      result.bagRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeBagRsp(global::CSBagRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasBagRsp &&
          result.bagRsp_ != global::CSBagRsp.DefaultInstance) {
          result.bagRsp_ = global::CSBagRsp.CreateBuilder(result.bagRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.bagRsp_ = value;
      }
      result.hasBagRsp = true;
      return this;
    }
    public Builder ClearBagRsp() {
      PrepareBuilder();
      result.hasBagRsp = false;
      result.bagRsp_ = null;
      return this;
    }
    
    public bool HasDecorateBagReq {
     get { return result.hasDecorateBagReq; }
    }
    public global::CSDecorateBagReq DecorateBagReq {
      get { return result.DecorateBagReq; }
      set { SetDecorateBagReq(value); }
    }
    public Builder SetDecorateBagReq(global::CSDecorateBagReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDecorateBagReq = true;
      result.decorateBagReq_ = value;
      return this;
    }
    public Builder SetDecorateBagReq(global::CSDecorateBagReq.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasDecorateBagReq = true;
      result.decorateBagReq_ = builderForValue.Build();
      return this;
    }
    public Builder MergeDecorateBagReq(global::CSDecorateBagReq value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasDecorateBagReq &&
          result.decorateBagReq_ != global::CSDecorateBagReq.DefaultInstance) {
          result.decorateBagReq_ = global::CSDecorateBagReq.CreateBuilder(result.decorateBagReq_).MergeFrom(value).BuildPartial();
      } else {
        result.decorateBagReq_ = value;
      }
      result.hasDecorateBagReq = true;
      return this;
    }
    public Builder ClearDecorateBagReq() {
      PrepareBuilder();
      result.hasDecorateBagReq = false;
      result.decorateBagReq_ = null;
      return this;
    }
    
    public bool HasDecorateBagRsp {
     get { return result.hasDecorateBagRsp; }
    }
    public global::CSDecorateBagRsp DecorateBagRsp {
      get { return result.DecorateBagRsp; }
      set { SetDecorateBagRsp(value); }
    }
    public Builder SetDecorateBagRsp(global::CSDecorateBagRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDecorateBagRsp = true;
      result.decorateBagRsp_ = value;
      return this;
    }
    public Builder SetDecorateBagRsp(global::CSDecorateBagRsp.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasDecorateBagRsp = true;
      result.decorateBagRsp_ = builderForValue.Build();
      return this;
    }
    public Builder MergeDecorateBagRsp(global::CSDecorateBagRsp value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasDecorateBagRsp &&
          result.decorateBagRsp_ != global::CSDecorateBagRsp.DefaultInstance) {
          result.decorateBagRsp_ = global::CSDecorateBagRsp.CreateBuilder(result.decorateBagRsp_).MergeFrom(value).BuildPartial();
      } else {
        result.decorateBagRsp_ = value;
      }
      result.hasDecorateBagRsp = true;
      return this;
    }
    public Builder ClearDecorateBagRsp() {
      PrepareBuilder();
      result.hasDecorateBagRsp = false;
      result.decorateBagRsp_ = null;
      return this;
    }
  }
  static CSMsgBody() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSMsgHead : pb::GeneratedMessage<CSMsgHead, CSMsgHead.Builder> {
  private CSMsgHead() { }
  private static readonly CSMsgHead defaultInstance = new CSMsgHead().MakeReadOnly();
  private static readonly string[] _cSMsgHeadFieldNames = new string[] { "msgID", "uid" };
  private static readonly uint[] _cSMsgHeadFieldTags = new uint[] { 16, 8 };
  public static CSMsgHead DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSMsgHead DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSMsgHead ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSMsgHead__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSMsgHead, CSMsgHead.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSMsgHead__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private ulong uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Uid {
    get { return uid_; }
  }
  
  public const int MsgIDFieldNumber = 2;
  private bool hasMsgID;
  private global::CSMsgID msgID_ = global::CSMsgID.CS_MSGID_MIN;
  public bool HasMsgID {
    get { return hasMsgID; }
  }
  public global::CSMsgID MsgID {
    get { return msgID_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasUid) return false;
      if (!hasMsgID) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSMsgHeadFieldNames;
    if (hasUid) {
      output.WriteUInt64(1, field_names[1], Uid);
    }
    if (hasMsgID) {
      output.WriteEnum(2, field_names[0], (int) MsgID, MsgID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUid) {
      size += pb::CodedOutputStream.ComputeUInt64Size(1, Uid);
    }
    if (hasMsgID) {
      size += pb::CodedOutputStream.ComputeEnumSize(2, (int) MsgID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSMsgHead ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSMsgHead ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSMsgHead ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSMsgHead ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSMsgHead ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSMsgHead ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSMsgHead ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSMsgHead ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSMsgHead ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSMsgHead ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSMsgHead MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSMsgHead prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSMsgHead, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSMsgHead cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSMsgHead result;
    
    private CSMsgHead PrepareBuilder() {
      if (resultIsReadOnly) {
        CSMsgHead original = result;
        result = new CSMsgHead();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSMsgHead MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSMsgHead.Descriptor; }
    }
    
    public override CSMsgHead DefaultInstanceForType {
      get { return global::CSMsgHead.DefaultInstance; }
    }
    
    public override CSMsgHead BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSMsgHead) {
        return MergeFrom((CSMsgHead) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSMsgHead other) {
      if (other == global::CSMsgHead.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasMsgID) {
        MsgID = other.MsgID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSMsgHeadFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSMsgHeadFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadUInt64(ref result.uid_);
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.msgID_, out unknown)) {
              result.hasMsgID = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetUid(ulong value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0UL;
      return this;
    }
    
    public bool HasMsgID {
     get { return result.hasMsgID; }
    }
    public global::CSMsgID MsgID {
      get { return result.MsgID; }
      set { SetMsgID(value); }
    }
    public Builder SetMsgID(global::CSMsgID value) {
      PrepareBuilder();
      result.hasMsgID = true;
      result.msgID_ = value;
      return this;
    }
    public Builder ClearMsgID() {
      PrepareBuilder();
      result.hasMsgID = false;
      result.msgID_ = global::CSMsgID.CS_MSGID_MIN;
      return this;
    }
  }
  static CSMsgHead() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSMsg : pb::GeneratedMessage<CSMsg, CSMsg.Builder> {
  private CSMsg() { }
  private static readonly CSMsg defaultInstance = new CSMsg().MakeReadOnly();
  private static readonly string[] _cSMsgFieldNames = new string[] { "body", "head" };
  private static readonly uint[] _cSMsgFieldTags = new uint[] { 18, 10 };
  public static CSMsg DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSMsg DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSMsg ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CSmsg.internal__static_CSMsg__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSMsg, CSMsg.Builder> InternalFieldAccessors {
    get { return global::CSmsg.internal__static_CSMsg__FieldAccessorTable; }
  }
  
  public const int HeadFieldNumber = 1;
  private bool hasHead;
  private global::CSMsgHead head_;
  public bool HasHead {
    get { return hasHead; }
  }
  public global::CSMsgHead Head {
    get { return head_ ?? global::CSMsgHead.DefaultInstance; }
  }
  
  public const int BodyFieldNumber = 2;
  private bool hasBody;
  private global::CSMsgBody body_;
  public bool HasBody {
    get { return hasBody; }
  }
  public global::CSMsgBody Body {
    get { return body_ ?? global::CSMsgBody.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasHead) return false;
      if (!hasBody) return false;
      if (!Head.IsInitialized) return false;
      if (!Body.IsInitialized) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _cSMsgFieldNames;
    if (hasHead) {
      output.WriteMessage(1, field_names[1], Head);
    }
    if (hasBody) {
      output.WriteMessage(2, field_names[0], Body);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasHead) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, Head);
    }
    if (hasBody) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, Body);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CSMsg ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSMsg ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSMsg ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSMsg ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSMsg ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSMsg MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSMsg prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSMsg, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSMsg cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSMsg result;
    
    private CSMsg PrepareBuilder() {
      if (resultIsReadOnly) {
        CSMsg original = result;
        result = new CSMsg();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSMsg MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSMsg.Descriptor; }
    }
    
    public override CSMsg DefaultInstanceForType {
      get { return global::CSMsg.DefaultInstance; }
    }
    
    public override CSMsg BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSMsg) {
        return MergeFrom((CSMsg) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSMsg other) {
      if (other == global::CSMsg.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasHead) {
        MergeHead(other.Head);
      }
      if (other.HasBody) {
        MergeBody(other.Body);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSMsgFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CSMsgHead.Builder subBuilder = global::CSMsgHead.CreateBuilder();
            if (result.hasHead) {
              subBuilder.MergeFrom(Head);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Head = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::CSMsgBody.Builder subBuilder = global::CSMsgBody.CreateBuilder();
            if (result.hasBody) {
              subBuilder.MergeFrom(Body);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Body = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasHead {
     get { return result.hasHead; }
    }
    public global::CSMsgHead Head {
      get { return result.Head; }
      set { SetHead(value); }
    }
    public Builder SetHead(global::CSMsgHead value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasHead = true;
      result.head_ = value;
      return this;
    }
    public Builder SetHead(global::CSMsgHead.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasHead = true;
      result.head_ = builderForValue.Build();
      return this;
    }
    public Builder MergeHead(global::CSMsgHead value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasHead &&
          result.head_ != global::CSMsgHead.DefaultInstance) {
          result.head_ = global::CSMsgHead.CreateBuilder(result.head_).MergeFrom(value).BuildPartial();
      } else {
        result.head_ = value;
      }
      result.hasHead = true;
      return this;
    }
    public Builder ClearHead() {
      PrepareBuilder();
      result.hasHead = false;
      result.head_ = null;
      return this;
    }
    
    public bool HasBody {
     get { return result.hasBody; }
    }
    public global::CSMsgBody Body {
      get { return result.Body; }
      set { SetBody(value); }
    }
    public Builder SetBody(global::CSMsgBody value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBody = true;
      result.body_ = value;
      return this;
    }
    public Builder SetBody(global::CSMsgBody.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasBody = true;
      result.body_ = builderForValue.Build();
      return this;
    }
    public Builder MergeBody(global::CSMsgBody value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasBody &&
          result.body_ != global::CSMsgBody.DefaultInstance) {
          result.body_ = global::CSMsgBody.CreateBuilder(result.body_).MergeFrom(value).BuildPartial();
      } else {
        result.body_ = value;
      }
      result.hasBody = true;
      return this;
    }
    public Builder ClearBody() {
      PrepareBuilder();
      result.hasBody = false;
      result.body_ = null;
      return this;
    }
  }
  static CSMsg() {
    object.ReferenceEquals(global::CSmsg.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
